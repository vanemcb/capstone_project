[{"/root/capstone_project/client/src/index.js":"1","/root/capstone_project/client/src/App.js":"2","/root/capstone_project/client/src/Components/survey.js":"3","/root/capstone_project/client/src/Components/BarByCompany.js":"4","/root/capstone_project/client/src/Components/DouByCompany.js":"5","/root/capstone_project/client/src/Pages/add_salary.js":"6","/root/capstone_project/client/src/Components/navigation.js":"7","/root/capstone_project/client/src/Components/footer.js":"8","/root/capstone_project/client/src/Components/ListLevels.js":"9","/root/capstone_project/client/src/Pages/by_company.js":"10","/root/capstone_project/client/src/Pages/home.js":"11","/root/capstone_project/client/src/Components/home_sidebar.js":"12","/root/capstone_project/client/src/Components/searchbar.js":"13","/root/capstone_project/client/src/Components/ListCompanies.js":"14","/root/capstone_project/client/src/Components/Popover.js":"15"},{"size":220,"mtime":1635292585071,"results":"16","hashOfConfig":"17"},{"size":619,"mtime":1635292585071,"results":"18","hashOfConfig":"17"},{"size":11380,"mtime":1635292585071,"results":"19","hashOfConfig":"17"},{"size":2021,"mtime":1635290374241,"results":"20","hashOfConfig":"17"},{"size":1596,"mtime":1635002415320,"results":"21","hashOfConfig":"17"},{"size":179,"mtime":1635290374241,"results":"22","hashOfConfig":"17"},{"size":2730,"mtime":1635363356593,"results":"23","hashOfConfig":"17"},{"size":4709,"mtime":1635292585071,"results":"24","hashOfConfig":"17"},{"size":2011,"mtime":1635292585071,"results":"25","hashOfConfig":"17"},{"size":490,"mtime":1635344508843,"results":"26","hashOfConfig":"17"},{"size":2585,"mtime":1635363825383,"results":"27","hashOfConfig":"17"},{"size":890,"mtime":1635292585071,"results":"28","hashOfConfig":"17"},{"size":7474,"mtime":1635344624543,"results":"29","hashOfConfig":"17"},{"size":3814,"mtime":1635348450783,"results":"30","hashOfConfig":"17"},{"size":2423,"mtime":1635294077211,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"wxh2lx",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/root/capstone_project/client/src/index.js",[],["66","67"],"/root/capstone_project/client/src/App.js",[],"/root/capstone_project/client/src/Components/survey.js",["68"],"import React, { useState, Fragment } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport FloatingLabel from 'react-bootstrap/FloatingLabel';\n\nconst Survey = () => {\n\n    const [company, setCompany] = useState(\"\");\n    const [company_location, setLocation] = useState(\"\");\n    const [title, setPosition] = useState(\"\");\n    const [level, setLevel] = useState(\"\");\n    const [total_xp, setExpTotal] = useState(\"\");\n    const [at_company_xp, setExpCompany] = useState(\"\");\n    const [salary, setSalary] = useState(\"\");\n    const [currency, setCurrency] = useState(\"\");\n    const [bonus, setBonus] = useState(\"\");\n    const [gender, setGender] = useState(\"\");\n    const [validated, setValidated] = useState(false);\n\n    const onSubmitForm = async (e) => {\n        e.preventDefault();\n        try {\n            const body = {\n                company, company_location, title, level,\n                total_xp, at_company_xp, salary, currency, bonus,\n                gender\n            };\n            await fetch(\"http://localhost:5000/add_salary\", {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(body)\n            });\n            window.location = \"/add_salary\";\n        } catch (err) {\n            console.error(err.message);\n        }\n    };\n\n    // const handleSubmit = (event) => {\n    //   const form = event.currentTarget;\n    //   if (form.checkValidity() === false) {\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //   }\n    //   setValidated(true);\n    // };\n\n    return (\n        <Fragment>\n            <Form\n                onSubmit={onSubmitForm}\n                style={{ width: 450, margin: \"auto\" }}\n                className=\"mt-5\"\n                noValidate\n                validated={validated}\n            >\n                <Row className=\"mb-3\">\n                    <Form.Group as={Col}>\n                        <FloatingLabel\n                            label=\"Company\"\n                            className=\"mb-3\"\n                        >\n                            <Form.Control\n                                name=\"company\"\n                                type=\"text\"\n                                placeholder=\"Company\"\n                                value={company}\n                                onChange={e => setCompany(e.target.value)}\n                                required\n                            />\n                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                        </FloatingLabel>\n                    </Form.Group>\n\n                    <Form.Group as={Col}>\n                        <FloatingLabel\n                            label=\"Company Location\"\n                            className=\"mb-3\"\n                        >\n                            <Form.Select\n                                name=\"company_location\"\n                                value={company_location}\n                                onChange={e => setLocation(e.target.value)}\n                            >\n                                <option value=\"\" disabled defaultValue hidden>Select...</option>\n                                <option value=\"colombia\">Colombia</option>\n                                <option value=\"usa\">USA</option>\n                                <option value=\"canada\">Canada</option>\n                                <option value=\"latam\">Latin America (other than Colombia)</option>\n                                <option value=\"olatam\">Outside Latin America</option>\n                            </Form.Select>\n                        </FloatingLabel>\n                    </Form.Group>\n                </Row>\n\n                <Row className=\"mb-3\">\n                    <Form.Group as={Col}>\n                        <FloatingLabel\n                            label=\"Job Position\"\n                            className=\"mb-3\"\n                        >\n                            <Form.Select\n                                name=\"title\"\n                                value={title}\n                                onChange={e => setPosition(e.target.value)}\n                            >\n                                <option value=\"\" disabled defaultValue hidden>Select...</option>\n                                <option value=\"software_engineer\">Software Engineer</option>\n                                <option value=\"machine_learning\">Machine Learning</option>\n                                <option value=\"security\">Security</option>\n                                <option value=\"full_stack\">Full Stack</option>\n                                <option value=\"api\">API</option>\n                                <option value=\"data\">Data</option>\n                                <option value=\"web_development\">Web Development</option>\n                                <option value=\"qa\">QA</option>\n                                <option value=\"devops\">DevOps</option>\n                                <option value=\"site_reliability\">Site_Reliability</option>\n                                <option value=\"distributed_systems\">Distributed Systems</option>\n                            </Form.Select>\n                        </FloatingLabel>\n                    </Form.Group>\n\n                    <Form.Group as={Col}>\n                        <FloatingLabel\n                            label=\"Job Level\"\n                            className=\"mb-3\"\n                        >\n                            <Form.Select\n                                name=\"level\"\n                                value={level}\n                                onChange={e => setLevel(e.target.value)}\n                            >\n                                <option value=\"\" disabled defaultValue hidden>Select...</option>\n                                <option value=\"intern\">Intern</option>\n                                <option value=\"junior\">Junior</option>\n                                <option value=\"mid\">Mid</option>\n                                <option value=\"senior\">Senior</option>\n                                <option value=\"leader\">Leader</option>\n                                <option value=\"management_roll\">Management Roll</option>\n                            </Form.Select>\n                        </FloatingLabel>\n                    </Form.Group>\n                </Row>\n\n                <Row className=\"mb-3\">\n                    <Form.Group as={Col}>\n                        <FloatingLabel\n                            label=\"Years of Experience\"\n                            className=\"mb-3\"\n                        >\n                            <Form.Control\n                                name=\"total_xp\"\n                                type=\"text\"\n                                placeholder=\"Years of Experience\"\n                                value={total_xp}\n                                onChange={e => setExpTotal(e.target.value)}\n                            />\n                        </FloatingLabel>\n                    </Form.Group>\n\n                    <Form.Group as={Col}>\n                        <FloatingLabel\n                            label=\"Years at Company\"\n                            className=\"mb-3\"\n                        >\n                            <Form.Control\n                                name=\"at_company_xp\"\n                                type=\"text\"\n                                placeholder=\"Years at Company\"\n                                value={at_company_xp}\n                                onChange={e => setExpCompany(e.target.value)}\n                            />\n                        </FloatingLabel>\n                    </Form.Group>\n                </Row>\n\n                <Row className=\"mb-3\">\n                    <Form.Group as={Col}>\n                        <FloatingLabel\n                            label=\"Monthly Salary\"\n                            className=\"mb-3\"\n                        >\n                            <Form.Control\n                                name=\"salary\"\n                                type=\"text\"\n                                placeholder=\"Monthly Salary\"\n                                value={salary}\n                                onChange={e => setSalary(e.target.value)}\n                            />\n                        </FloatingLabel>\n                    </Form.Group>\n\n                    <Form.Group as={Col}>\n                        <FloatingLabel\n                            label=\"Bonus\"\n                            className=\"mb-3\"\n                        >\n                            <Form.Control\n                                name=\"bonus\"\n                                type=\"text\"\n                                placeholder=\"Bonus\"\n                                value={bonus}\n                                onChange={e => setBonus(e.target.value)}\n                            />\n                        </FloatingLabel>\n                    </Form.Group>\n\n                    <Form.Group as={Col}>\n                        <FloatingLabel\n                            label=\"Currency\"\n                            className=\"mb-3\"\n                        >\n                            <Form.Select\n                                name=\"currency\"\n                                value={currency}\n                                onChange={e => setCurrency(e.target.value)}\n                            >\n                                <option value=\"\" disabled defaultValue hidden>Select...</option>\n                                <option value=\"COP\">CoP</option>\n                                <option value=\"USD\">U$D</option>\n                                <option value=\"euro\">Euro</option>\n                                <option value=\"brazilian_real\">Brazilian Real</option>\n                                <option value=\"chilean_peso\">Chilean Peso</option>\n                                <option value=\"argentina_peso\">Argentina Peso</option>\n                            </Form.Select>\n                        </FloatingLabel>\n                    </Form.Group>\n                </Row>\n\n                <Form.Group>\n                    <FloatingLabel\n                        label=\"Gender\"\n                        className=\"mb-3\"\n                    >\n                        <Form.Select\n                            name=\"currency\"\n                            value={gender}\n                            onChange={e => setGender(e.target.value)}\n                        >\n                            <option value=\"\" disabled defaultValue hidden>Select...</option>\n                            <option value=\"male\">Male</option>\n                            <option value=\"female\">Female</option>\n                            <option value=\"other\">Other</option>\n                            <option value=\"prefer_not_to_say\">Prefer not to say</option>\n                        </Form.Select>\n                    </FloatingLabel>\n                </Form.Group>\n\n                <Button variant=\"primary\" type=\"submit\">\n                    Submit\n                </Button>\n            </Form>\n\n        </Fragment>\n    )\n};\n\nexport default Survey;\n","/root/capstone_project/client/src/Components/BarByCompany.js",[],"/root/capstone_project/client/src/Components/DouByCompany.js",[],["69","70"],"/root/capstone_project/client/src/Pages/add_salary.js",[],"/root/capstone_project/client/src/Components/navigation.js",[],"/root/capstone_project/client/src/Components/footer.js",[],"/root/capstone_project/client/src/Components/ListLevels.js",[],"/root/capstone_project/client/src/Pages/by_company.js",["71","72"],"/root/capstone_project/client/src/Pages/home.js",["73"],"/root/capstone_project/client/src/Components/home_sidebar.js",["74"],"import React, { Fragment } from 'react';\nimport { Container, Image } from 'react-bootstrap'\nimport income from './images/income.png'\n\n\nconst HomeSideBar = () => {\n    return (\n        <div>\n            <Container fluid>\n                <button className='btn hover-shadow' href=\"#auth0\" style={{\n                    background: '#E4D8DC',\n                    border: 'dashed',\n                    fontSize: '18px',\n                }}>\n                    <Image src={income}\n                        height='32'\n                        style={{\n                            margin: '5px 5px 5px 5px'\n                        }}\n                    />\n                    <p style={{ fontSize: '16px', fontStyle: 'italic' }}>\n                        Add Your Salary\n                    </p>\n                </button>\n            </Container>\n        </div>\n    )\n};\n\nexport default HomeSideBar;","/root/capstone_project/client/src/Components/searchbar.js",["75"],"/root/capstone_project/client/src/Components/ListCompanies.js",["76"],"/root/capstone_project/client/src/Components/Popover.js",["77","78","79","80"],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":21,"column":23,"nodeType":"87","messageId":"88","endLine":21,"endColumn":35},{"ruleId":"81","replacedBy":"89"},{"ruleId":"83","replacedBy":"90"},{"ruleId":"85","severity":1,"message":"91","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":26},{"ruleId":"85","severity":1,"message":"92","line":1,"column":28,"nodeType":"87","messageId":"88","endLine":1,"endColumn":36},{"ruleId":"85","severity":1,"message":"93","line":8,"column":8,"nodeType":"87","messageId":"88","endLine":8,"endColumn":28},{"ruleId":"85","severity":1,"message":"94","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":25},{"ruleId":"85","severity":1,"message":"95","line":4,"column":10,"nodeType":"87","messageId":"88","endLine":4,"endColumn":14},{"ruleId":"85","severity":1,"message":"96","line":62,"column":11,"nodeType":"87","messageId":"88","endLine":62,"endColumn":20},{"ruleId":"85","severity":1,"message":"91","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":26},{"ruleId":"85","severity":1,"message":"92","line":1,"column":28,"nodeType":"87","messageId":"88","endLine":1,"endColumn":36},{"ruleId":"85","severity":1,"message":"94","line":1,"column":38,"nodeType":"87","messageId":"88","endLine":1,"endColumn":46},{"ruleId":"85","severity":1,"message":"97","line":9,"column":8,"nodeType":"87","messageId":"88","endLine":9,"endColumn":12},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'setValidated' is assigned a value but never used.","Identifier","unusedVar",["98"],["99"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'FreeSoloCreateOption' is defined but never used.","'Fragment' is defined but never used.","'auto' is defined but never used.","'getTitles' is assigned a value but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]