[{"/root/capstone_project/client/src/index.js":"1","/root/capstone_project/client/src/App.js":"2","/root/capstone_project/client/src/Pages/home.js":"3","/root/capstone_project/client/src/Pages/add_salary.js":"4","/root/capstone_project/client/src/Pages/general_info.js":"5","/root/capstone_project/client/src/Components/navigation.js":"6","/root/capstone_project/client/src/Components/footer.js":"7","/root/capstone_project/client/src/Components/levels.js":"8","/root/capstone_project/client/src/Components/searchbar.js":"9","/root/capstone_project/client/src/Components/ToggleCompanies.js":"10","/root/capstone_project/client/src/Components/CardCompany.js":"11","/root/capstone_project/client/src/Components/survey_button.js":"12","/root/capstone_project/client/src/Components/survey.js":"13","/root/capstone_project/client/src/Components/DouByCompany.js":"14","/root/capstone_project/client/src/Components/BarByCompany.js":"15","/root/capstone_project/client/src/Components/ScatterByPosition.js":"16","/root/capstone_project/client/src/Components/DouByPosition.js":"17","/root/capstone_project/client/src/Components/CardBenefits.js":"18","/root/capstone_project/client/src/Components/PopoverCompanies.js":"19","/root/capstone_project/client/src/Pages/charts.js":"20","/root/capstone_project/client/src/Components/CardGeneral.js":"21","/root/capstone_project/client/src/Components/BarByFilter.js":"22"},{"size":220,"mtime":1635179767884,"results":"23","hashOfConfig":"24"},{"size":751,"mtime":1635971191819,"results":"25","hashOfConfig":"24"},{"size":4407,"mtime":1635880155200,"results":"26","hashOfConfig":"24"},{"size":459,"mtime":1635880155200,"results":"27","hashOfConfig":"24"},{"size":3813,"mtime":1635971571139,"results":"28","hashOfConfig":"24"},{"size":2185,"mtime":1635971191819,"results":"29","hashOfConfig":"24"},{"size":4055,"mtime":1635880155200,"results":"30","hashOfConfig":"24"},{"size":1539,"mtime":1635880155200,"results":"31","hashOfConfig":"24"},{"size":7474,"mtime":1635447931256,"results":"32","hashOfConfig":"24"},{"size":2607,"mtime":1635880155200,"results":"33","hashOfConfig":"24"},{"size":1074,"mtime":1635952051990,"results":"34","hashOfConfig":"24"},{"size":814,"mtime":1635880155200,"results":"35","hashOfConfig":"24"},{"size":11047,"mtime":1635971191819,"results":"36","hashOfConfig":"24"},{"size":1375,"mtime":1635731764832,"results":"37","hashOfConfig":"24"},{"size":1490,"mtime":1635731764832,"results":"38","hashOfConfig":"24"},{"size":1903,"mtime":1635971191819,"results":"39","hashOfConfig":"24"},{"size":1516,"mtime":1635971191819,"results":"40","hashOfConfig":"24"},{"size":571,"mtime":1635785817947,"results":"41","hashOfConfig":"24"},{"size":1750,"mtime":1635880155200,"results":"42","hashOfConfig":"24"},{"size":4558,"mtime":1635971191819,"results":"43","hashOfConfig":"24"},{"size":1327,"mtime":1635971191819,"results":"44","hashOfConfig":"24"},{"size":2683,"mtime":1635971191819,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"wxh2lx",{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/root/capstone_project/client/src/index.js",[],["96","97"],"/root/capstone_project/client/src/App.js",[],"/root/capstone_project/client/src/Pages/home.js",["98","99"],"import React, { Fragment } from \"react\";\nimport Navigation from \"../Components/navigation\";\nimport FooterBar from \"../Components/footer\";\nimport { Row, Col } from \"react-bootstrap\";\nimport SurveyButton from \"../Components/survey_button\";\nimport Levels from \"../Components/levels\";\nimport FreeSoloCreateOption from \"../Components/searchbar\";\nimport ToggleCompanies from \"../Components/ToggleCompanies\"\nimport { height } from \"@mui/system\";\n\nconst Home = () => {\n    const level = [\"L0\", \"L1\", \"L2\", \"L3\", \"L4\", \"L5\"];\n\n    return (\n        <div>\n            <div style={{ position: 'relative' }}>\n                <Fragment >\n                    <Navigation />\n                    <Row className=\"show-grid\" style={{ margin: '20px 10px 10px 10px' }}>\n                        <Col className=\"show-grid\" xs={2} md={2} style={{ width: 230 }} >\n                            <Row className=\"mx-auto\" style={{ margin: '10px 0px 30px 0px' }}>\n                                <SurveyButton />\n                            </Row >\n                            <Row className=\"mx-auto\">\n                            </Row>\n                        </Col>\n                        <Col className=\"show-grid\" xs={10} md={10} style={{ display: 'block' }}>\n                            <Row style={{\n                                display: 'flex',\n                                flexWrap: 'wrap',\n                                margin: '10px 0px 30px 0px',\n                                alignContent: 'space-between'\n                            }}>\n                                <ToggleCompanies />\n                            </Row>\n                            <Row className=\"show-grid\" xs={10} md={10} >\n\n                                <Col xs={12} md={12}>\n                                    <Row className=\"show-grid\" style={{\n                                        display: 'flex',\n                                        flexWrap: 'wrap',\n                                        margin: '00px 100px 00px 100px'\n                                    }}>\n                                        <Col xs={1} md={1} style={{\n                                            display: 'flex',\n                                            flexWrap: 'wrap',\n                                            margin: '00px 00px 00px 00px',\n                                            paddingLeft: 0,\n                                            paddingRight: 0\n                                        }}>\n                                            <ul className=\"list-group text-center\" style={{ width: '100%', margin: '00px 00px 0px 00px' }}>\n                                                <li className=\"list-group-item active\" style={{\n                                                    background: \"#DEE0E6\", color: \"black\", borderColor: \"white\"\n                                                }}>Levels</li>\n                                                {level.map(value => (\n                                                    <li className=\"list-group-item\" style={{ height: '60px', background: \"#DEE0E6\", borderColor: \"white\" }}>{value}</li>\n                                                ))}\n\n                                            </ul>\n                                        </Col >\n                                        <Col style={{ paddingLeft: 0, paddingRight: 0 }}>\n                                            <Levels />\n                                        </Col>\n                                        <Col style={{ paddingLeft: 0, paddingRight: 0 }}>\n                                            <Levels />\n                                        </Col>\n                                        <Col style={{ paddingLeft: 0, paddingRight: 0 }}>\n                                            <Levels />\n                                        </Col>\n                                        <Col style={{ paddingLeft: 0, paddingRight: 0 }} >\n                                            <Levels />\n                                        </Col>\n\n                                    </Row>\n                                </Col >\n                            </Row>\n                        </Col>\n                    </Row>\n                </Fragment>\n            </div>\n            <div className='fixed-bottom'>\n                <FooterBar />\n            </div>\n        </div>\n    );\n};\n\nexport default Home;","/root/capstone_project/client/src/Pages/add_salary.js",[],"/root/capstone_project/client/src/Pages/general_info.js",["100"],"/root/capstone_project/client/src/Components/navigation.js",["101","102"],"/root/capstone_project/client/src/Components/footer.js",["103","104","105"],"import React, { Fragment } from 'react';\nimport { Nav, Container, Navbar, Image, Row, Col } from 'react-bootstrap'\nimport man from './images/man.png'\nimport beard from './images/beard-man.png'\nimport woman from './images/woman.png'\nimport github from './images/github.png'\nimport linkedin from './images/linkedin.png'\n\n\nconst FooterBar = () => {\n    return (\n        <Navbar style={{ sticky: \"bottom\", background: '#DEE0E6', height: '70px', width: '100%', bottom: '0%' }}>\n            <Fragment>\n                <Col md={3} >\n                    <Navbar.Brand href=\"#LinkToBrandingPage\">GET TO KNOW US BETTER!!</Navbar.Brand>\n                    <Nav\n                        className=\"me-auto my-2 my-lg-0\"\n                        style={{\n                            height: '24px',\n                            maxHeight: '65px',\n                            minHeight: '5px'\n                        }}\n                    >\n                        <p style={{ fontSize: '12px' }}>\n                            &copy; {new Date().getFullYear()} PanDevs - All Rights Reserved\n                        </p>\n                    </Nav>\n                </Col>\n                <Col md={7} className=\"show-grid justify-content-md-center\" style={{ display: 'flex' }} >\n                    <Nav\n                        className=\"my-2 my-lg-0\"\n                        style={{\n                            maxHeight: '65px',\n                            minHeight: '5px'\n                        }}\n                    >\n                        {/*Julian Info*/}\n                        <Col xs={4} md={4} style={{ width: '120px' }}>\n                            <Image src={beard}\n                                className='hover-shadow rounded-circle'\n                                height='40'\n                                style={{ margin: '0px 0px 0px 25px' }}\n                            />\n                            <Row style={{ fontSize: '12px', fontStyle: 'italic', justifyContent: 'center' }}>\n                                Julian Tabares\n                            </Row>\n                        </Col>\n                        {/*Vanesa Info*/}\n                        <Col xs={4} md={4} style={{ width: '120px' }} >\n                            <Image src={woman}\n                                className='hover-shadow rounded-circle'\n                                height='40'\n                                style={{ margin: '0px 0px 0px 25px' }}\n                            />\n                            <Row style={{ fontSize: '12px', fontStyle: 'italic', justifyContent: 'center' }}>\n                                Vanessa Mususue\n                            </Row>\n                        </Col>\n                        {/*Alexander Info*/}\n                        <Col xs={4} md={4} style={{ width: '120px' }}>\n                            <Image src={man}\n                                className='hover-shadow rounded-circle'\n                                height='40'\n                                style={{ margin: '0px 0px 0px 25px' }}\n                            />\n                            <Row style={{ fontSize: '12px', fontStyle: 'italic', justifyContent: 'center' }}>\n                                Alexander Cardona\n                            </Row>\n                        </Col>\n                    </Nav>\n                </Col>\n                <Col md={2}>\n                    <Nav\n                        className=\"ml-auto my-2 my-lg-0\"\n                        style={{ maxHeight: '70px' }}\n                        navbarScroll\n                    >\n                        <Nav.Link href=\"https://www.techstars.com/\" style={{ fontSize: '16px', fontStyle: 'italic', justifyContent: 'center' }}>TechStars</Nav.Link>\n                        <Nav.Link href=\"https://www.holbertonschool.com/\" style={{ fontSize: '16px', fontStyle: 'italic', justifyContent: 'center' }}>Holberton</Nav.Link>\n\n                    </Nav>\n                </Col>\n            </Fragment>\n        </Navbar>\n    )\n};\n\nexport default FooterBar;","/root/capstone_project/client/src/Components/levels.js",["106","107"],"import React, { useEffect, useState, Fragment } from \"react\";\n\nconst Levels = () => {\n\n    const [dict, setDict] = useState(null);\n    const level = [\"L0\", \"L1\", \"L2\", \"L3\", \"L4\", \"L5\"];\n\n    const getDict = async (comp) => {\n        try {\n            const response = await fetch(\"http://localhost:5000/by_company\");\n            const jsonData = await response.json();\n            setDict(jsonData)\n        } catch (err) {\n            console.error(err.message);\n        }\n    };\n\n    useEffect(() => {\n        getDict();\n    }, []);\n\n    let level_list = [];\n    if (dict) {\n        const l = { \"L0\": \"No data\", \"L1\": \"No data\", \"L2\": \"No data\", \"L3\": \"No data\", \"L4\": \"No data\", \"L5\": \"No data\" };\n\n        for (const key in l) {\n            if (key in dict.company_median_salary[dict.company_name]) {\n                l[key] = dict.company_median_salary[dict.company_name][key];\n            }\n        }\n        for (const key2 in l) {\n            level_list.push(l[key2]);\n        }\n    }\n\n    return (\n\n        <ul className=\"list-group text-center vertical-align-middle\" style={{ width: '100%' }}>\n            <li className=\"list-group-item active \" style={{ background: \"#DEE0E6\", color: \"black\", borderColor: \"white\" }}>{dict ? dict.company_name : \"No data\"}</li>\n            {level_list.map(value => (\n                <li className=\"list-group-item \" key={value} style={{ height: '60px', borderRightColor: \"#B0B0B000\", borderLeftColor: \"#B0B0B000\" }}>{value} USD</li>\n            ))}\n        </ul>\n    );\n};\n\nexport default Levels;","/root/capstone_project/client/src/Components/searchbar.js",["108"],"import * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\nimport { auto } from 'async';\n\nconst filter = createFilterOptions();\n\nexport default function SearchBar() {\n    const [value, setValue] = React.useState(null);\n\n    return (\n        <Autocomplete\n            value={value}\n            onChange={(event, newValue) => {\n                if (typeof newValue === 'string') {\n                    setValue({\n                        title: newValue,\n                    });\n                } else if (newValue && newValue.inputValue) {\n                    // Create a new value from the user input\n                    setValue({\n                        title: newValue.inputValue,\n                    });\n                } else {\n                    setValue(newValue);\n                }\n            }}\n            filterOptions={(options, params) => {\n                const filtered = filter(options, params);\n\n                const { inputValue } = params;\n                // Suggest the creation of a new value\n                const isExisting = options.some((option) => inputValue === option.title);\n                if (inputValue !== '' && !isExisting) {\n                    filtered.push({\n                        inputValue,\n                        title: `\"${inputValue}\" hasn't been added yet`,\n                    });\n                }\n                return filtered;\n            }}\n            selectOnFocus\n            clearOnBlur\n            handleHomeEndKeys\n            id=\"free-solo-with-text-demo\"\n            options={top100Films}\n            getOptionLabel={(option) => {\n                // Value selected with enter, right from the input\n                if (typeof option === 'string') {\n                    return option;\n                }\n                // Add \"xxx\" option created dynamically\n                if (option.inputValue) {\n                    return option.inputValue;\n                }\n                // Regular option\n                return option.title;\n            }}\n            renderOption={(props, option) => <li {...props}>{option.title}</li>}\n            sx={{ width: 'flex', margin: '5px 5px 20px -5px' }}\n            freeSolo\n            renderInput={(params) => (\n                <TextField {...params} label=\"Search Company...\" />\n            )}\n        />\n    );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n    { title: 'The Shawshank Redemption', year: 1994 },\n    { title: 'The Godfather', year: 1972 },\n    { title: 'The Godfather: Part II', year: 1974 },\n    { title: 'The Dark Knight', year: 2008 },\n    { title: '12 Angry Men', year: 1957 },\n    { title: \"Schindler's List\", year: 1993 },\n    { title: 'Pulp Fiction', year: 1994 },\n    {\n        title: 'The Lord of the Rings: The Return of the King',\n        year: 2003,\n    },\n    { title: 'The Good, the Bad and the Ugly', year: 1966 },\n    { title: 'Fight Club', year: 1999 },\n    {\n        title: 'The Lord of the Rings: The Fellowship of the Ring',\n        year: 2001,\n    },\n    {\n        title: 'Star Wars: Episode V - The Empire Strikes Back',\n        year: 1980,\n    },\n    { title: 'Forrest Gump', year: 1994 },\n    { title: 'Inception', year: 2010 },\n    {\n        title: 'The Lord of the Rings: The Two Towers',\n        year: 2002,\n    },\n    { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n    { title: 'Goodfellas', year: 1990 },\n    { title: 'The Matrix', year: 1999 },\n    { title: 'Seven Samurai', year: 1954 },\n    {\n        title: 'Star Wars: Episode IV - A New Hope',\n        year: 1977,\n    },\n    { title: 'City of God', year: 2002 },\n    { title: 'Se7en', year: 1995 },\n    { title: 'The Silence of the Lambs', year: 1991 },\n    { title: \"It's a Wonderful Life\", year: 1946 },\n    { title: 'Life Is Beautiful', year: 1997 },\n    { title: 'The Usual Suspects', year: 1995 },\n    { title: 'Léon: The Professional', year: 1994 },\n    { title: 'Spirited Away', year: 2001 },\n    { title: 'Saving Private Ryan', year: 1998 },\n    { title: 'Once Upon a Time in the West', year: 1968 },\n    { title: 'American History X', year: 1998 },\n    { title: 'Interstellar', year: 2014 },\n    { title: 'Casablanca', year: 1942 },\n    { title: 'City Lights', year: 1931 },\n    { title: 'Psycho', year: 1960 },\n    { title: 'The Green Mile', year: 1999 },\n    { title: 'The Intouchables', year: 2011 },\n    { title: 'Modern Times', year: 1936 },\n    { title: 'Raiders of the Lost Ark', year: 1981 },\n    { title: 'Rear Window', year: 1954 },\n    { title: 'The Pianist', year: 2002 },\n    { title: 'The Departed', year: 2006 },\n    { title: 'Terminator 2: Judgment Day', year: 1991 },\n    { title: 'Back to the Future', year: 1985 },\n    { title: 'Whiplash', year: 2014 },\n    { title: 'Gladiator', year: 2000 },\n    { title: 'Memento', year: 2000 },\n    { title: 'The Prestige', year: 2006 },\n    { title: 'The Lion King', year: 1994 },\n    { title: 'Apocalypse Now', year: 1979 },\n    { title: 'Alien', year: 1979 },\n    { title: 'Sunset Boulevard', year: 1950 },\n    {\n        title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n        year: 1964,\n    },\n    { title: 'The Great Dictator', year: 1940 },\n    { title: 'Cinema Paradiso', year: 1988 },\n    { title: 'The Lives of Others', year: 2006 },\n    { title: 'Grave of the Fireflies', year: 1988 },\n    { title: 'Paths of Glory', year: 1957 },\n    { title: 'Django Unchained', year: 2012 },\n    { title: 'The Shining', year: 1980 },\n    { title: 'WALL·E', year: 2008 },\n    { title: 'American Beauty', year: 1999 },\n    { title: 'The Dark Knight Rises', year: 2012 },\n    { title: 'Princess Mononoke', year: 1997 },\n    { title: 'Aliens', year: 1986 },\n    { title: 'Oldboy', year: 2003 },\n    { title: 'Once Upon a Time in America', year: 1984 },\n    { title: 'Witness for the Prosecution', year: 1957 },\n    { title: 'Das Boot', year: 1981 },\n    { title: 'Citizen Kane', year: 1941 },\n    { title: 'North by Northwest', year: 1959 },\n    { title: 'Vertigo', year: 1958 },\n    {\n        title: 'Star Wars: Episode VI - Return of the Jedi',\n        year: 1983,\n    },\n    { title: 'Reservoir Dogs', year: 1992 },\n    { title: 'Braveheart', year: 1995 },\n    { title: 'M', year: 1931 },\n    { title: 'Requiem for a Dream', year: 2000 },\n    { title: 'Amélie', year: 2001 },\n    { title: 'A Clockwork Orange', year: 1971 },\n    { title: 'Like Stars on Earth', year: 2007 },\n    { title: 'Taxi Driver', year: 1976 },\n    { title: 'Lawrence of Arabia', year: 1962 },\n    { title: 'Double Indemnity', year: 1944 },\n    {\n        title: 'Eternal Sunshine of the Spotless Mind',\n        year: 2004,\n    },\n    { title: 'Amadeus', year: 1984 },\n    { title: 'To Kill a Mockingbird', year: 1962 },\n    { title: 'Toy Story 3', year: 2010 },\n    { title: 'Logan', year: 2017 },\n    { title: 'Full Metal Jacket', year: 1987 },\n    { title: 'Dangal', year: 2016 },\n    { title: 'The Sting', year: 1973 },\n    { title: '2001: A Space Odyssey', year: 1968 },\n    { title: \"Singin' in the Rain\", year: 1952 },\n    { title: 'Toy Story', year: 1995 },\n    { title: 'Bicycle Thieves', year: 1948 },\n    { title: 'The Kid', year: 1921 },\n    { title: 'Inglourious Basterds', year: 2009 },\n    { title: 'Snatch', year: 2000 },\n    { title: '3 Idiots', year: 2009 },\n    { title: 'Monty Python and the Holy Grail', year: 1975 },\n];","/root/capstone_project/client/src/Components/ToggleCompanies.js",[],"/root/capstone_project/client/src/Components/CardCompany.js",[],"/root/capstone_project/client/src/Components/survey_button.js",["109","110"],"import React, { Fragment } from 'react';\nimport { Container, Image, Button } from 'react-bootstrap'\nimport income from './images/income.png'\n\n\nconst SurveyButton = () => {\n    return (\n        <Button className='btn hover-shadow' href=\"/add_salary\" style={{\n            width: '140px',\n            background: '#DEE0E6',\n            borderColor: \"#B0B0B000\",\n            margin: 'auto',\n            fontSize: '18px',\n            position: 'relative'\n        }}>\n            <Image src={income}\n                height='32'\n                style={{\n                    margin: '5px 5px 5px 5px'\n                }}\n            />\n            <p style={{ fontSize: '16px', fontStyle: 'italic', color: 'black' }}>\n                Add Your Salary\n            </p>\n        </Button>\n    )\n};\n\nexport default SurveyButton;","/root/capstone_project/client/src/Components/survey.js",["111"],"/root/capstone_project/client/src/Components/DouByCompany.js",[],"/root/capstone_project/client/src/Components/BarByCompany.js",[],"/root/capstone_project/client/src/Components/ScatterByPosition.js",["112","113"],"/root/capstone_project/client/src/Components/DouByPosition.js",[],"/root/capstone_project/client/src/Components/CardBenefits.js",[],"/root/capstone_project/client/src/Components/PopoverCompanies.js",[],"/root/capstone_project/client/src/Pages/charts.js",["114"],"/root/capstone_project/client/src/Components/CardGeneral.js",["115"],"/root/capstone_project/client/src/Components/BarByFilter.js",[],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":7,"column":8,"nodeType":"122","messageId":"123","endLine":7,"endColumn":28},{"ruleId":"120","severity":1,"message":"124","line":9,"column":10,"nodeType":"122","messageId":"123","endLine":9,"endColumn":16},{"ruleId":"120","severity":1,"message":"125","line":6,"column":8,"nodeType":"122","messageId":"123","endLine":6,"endColumn":23},{"ruleId":"120","severity":1,"message":"126","line":4,"column":10,"nodeType":"122","messageId":"123","endLine":4,"endColumn":14},{"ruleId":"127","severity":1,"message":"128","line":7,"column":1,"nodeType":"129","messageId":"130","endLine":7,"endColumn":70},{"ruleId":"120","severity":1,"message":"131","line":2,"column":15,"nodeType":"122","messageId":"123","endLine":2,"endColumn":24},{"ruleId":"120","severity":1,"message":"132","line":6,"column":8,"nodeType":"122","messageId":"123","endLine":6,"endColumn":14},{"ruleId":"120","severity":1,"message":"133","line":7,"column":8,"nodeType":"122","messageId":"123","endLine":7,"endColumn":16},{"ruleId":"120","severity":1,"message":"134","line":1,"column":38,"nodeType":"122","messageId":"123","endLine":1,"endColumn":46},{"ruleId":"120","severity":1,"message":"135","line":6,"column":11,"nodeType":"122","messageId":"123","endLine":6,"endColumn":16},{"ruleId":"120","severity":1,"message":"136","line":4,"column":10,"nodeType":"122","messageId":"123","endLine":4,"endColumn":14},{"ruleId":"120","severity":1,"message":"134","line":1,"column":17,"nodeType":"122","messageId":"123","endLine":1,"endColumn":25},{"ruleId":"120","severity":1,"message":"131","line":2,"column":10,"nodeType":"122","messageId":"123","endLine":2,"endColumn":19},{"ruleId":"120","severity":1,"message":"137","line":20,"column":23,"nodeType":"122","messageId":"123","endLine":20,"endColumn":35},{"ruleId":"120","severity":1,"message":"138","line":2,"column":8,"nodeType":"122","messageId":"123","endLine":2,"endColumn":13},{"ruleId":"120","severity":1,"message":"139","line":37,"column":7,"nodeType":"122","messageId":"123","endLine":37,"endColumn":14},{"ruleId":"120","severity":1,"message":"138","line":13,"column":8,"nodeType":"122","messageId":"123","endLine":13,"endColumn":13},{"ruleId":"120","severity":1,"message":"140","line":1,"column":17,"nodeType":"122","messageId":"123","endLine":1,"endColumn":25},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"no-unused-vars","'FreeSoloCreateOption' is defined but never used.","Identifier","unusedVar","'height' is defined but never used.","'ToggleCompanies' is defined but never used.","'Link' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Container' is defined but never used.","'github' is defined but never used.","'linkedin' is defined but never used.","'Fragment' is defined but never used.","'level' is assigned a value but never used.","'auto' is defined but never used.","'setValidated' is assigned a value but never used.","'Chart' is defined but never used.","'options' is assigned a value but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]