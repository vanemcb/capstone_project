[{"/root/capstone_project/client/src/index.js":"1","/root/capstone_project/client/src/App.js":"2","/root/capstone_project/client/src/Pages/add_salary.js":"3","/root/capstone_project/client/src/Components/navigation.js":"4","/root/capstone_project/client/src/Pages/home.js":"5","/root/capstone_project/client/src/Components/Popover.js":"6","/root/capstone_project/client/src/Pages/by_position_charts.js":"7","/root/capstone_project/client/src/Pages/by_company_charts.js":"8","/root/capstone_project/client/src/Pages/by_company.js":"9","/root/capstone_project/client/src/Components/survey.js":"10","/root/capstone_project/client/src/Components/footer.js":"11","/root/capstone_project/client/src/Components/ListLevels.js":"12","/root/capstone_project/client/src/Components/home_sidebar.js":"13","/root/capstone_project/client/src/Components/searchbar.js":"14","/root/capstone_project/client/src/Components/BarByCompany.js":"15","/root/capstone_project/client/src/Components/DouByCompany.js":"16","/root/capstone_project/client/src/Components/ListCompanies.js":"17","/root/capstone_project/client/src/Components/CardCompany.js":"18","/root/capstone_project/client/src/Components/levels.js":"19"},{"size":220,"mtime":1635179767884,"results":"20","hashOfConfig":"21"},{"size":960,"mtime":1635363695781,"results":"22","hashOfConfig":"21"},{"size":179,"mtime":1635179767884,"results":"23","hashOfConfig":"21"},{"size":2734,"mtime":1635363695781,"results":"24","hashOfConfig":"21"},{"size":1934,"mtime":1635394557368,"results":"25","hashOfConfig":"21"},{"size":3288,"mtime":1635383691508,"results":"26","hashOfConfig":"21"},{"size":396,"mtime":1635363695781,"results":"27","hashOfConfig":"21"},{"size":1256,"mtime":1635386965788,"results":"28","hashOfConfig":"21"},{"size":522,"mtime":1635365924351,"results":"29","hashOfConfig":"21"},{"size":11380,"mtime":1635355575811,"results":"30","hashOfConfig":"21"},{"size":4709,"mtime":1635355575811,"results":"31","hashOfConfig":"21"},{"size":2370,"mtime":1635394336548,"results":"32","hashOfConfig":"21"},{"size":890,"mtime":1635355575811,"results":"33","hashOfConfig":"21"},{"size":7474,"mtime":1635365924351,"results":"34","hashOfConfig":"21"},{"size":2116,"mtime":1635375601137,"results":"35","hashOfConfig":"21"},{"size":1666,"mtime":1635363695781,"results":"36","hashOfConfig":"21"},{"size":2998,"mtime":1635365924351,"results":"37","hashOfConfig":"21"},{"size":958,"mtime":1635376640347,"results":"38","hashOfConfig":"21"},{"size":952,"mtime":1635395510068,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"wxh2lx",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/root/capstone_project/client/src/index.js",[],["85","86"],"/root/capstone_project/client/src/App.js",["87"],"import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './App.css';\n\n//Pages\nimport Home from './Pages/home';\nimport AddSalary from './Pages/add_salary';\nimport ByCompany from './Pages/by_company';\nimport ByCompanyCharts from './Pages/by_company_charts';\nimport ByPositionCharts from './Pages/by_position_charts';\nimport PopOver from './Components/Popover';\nimport Navigation from './Components/navigation';\n\n\nfunction App() {\n  return (\n\n    <Router>\n      <Route path=\"/\" exact>\n        <Home />\n      </Route>\n\n      <Route path=\"/survey\" exact>\n        <AddSalary />\n      </Route>\n\n      <Route path=\"/by_company\" exact>\n        <ByCompany/>\n      </Route>\n\n      <Route path=\"/by_company/charts/:company/:position\" component={PopOver}>\n        <ByCompanyCharts />\n      </Route>\n\n      <Route path=\"/by_position/\">\n        <ByPositionCharts />\n      </Route>\n\n    </Router>\n    \n  );\n};\n\nexport default App;\n","/root/capstone_project/client/src/Pages/add_salary.js",[],"/root/capstone_project/client/src/Components/navigation.js",[],"/root/capstone_project/client/src/Pages/home.js",["88"],"/root/capstone_project/client/src/Components/Popover.js",[],"/root/capstone_project/client/src/Pages/by_position_charts.js",[],"/root/capstone_project/client/src/Pages/by_company_charts.js",[],"/root/capstone_project/client/src/Pages/by_company.js",[],"/root/capstone_project/client/src/Components/survey.js",["89"],"import React, { useState, Fragment } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport FloatingLabel from 'react-bootstrap/FloatingLabel';\n\nconst Survey = () => {\n\n    const [company, setCompany] = useState(\"\");\n    const [company_location, setLocation] = useState(\"\");\n    const [title, setPosition] = useState(\"\");\n    const [level, setLevel] = useState(\"\");\n    const [total_xp, setExpTotal] = useState(\"\");\n    const [at_company_xp, setExpCompany] = useState(\"\");\n    const [salary, setSalary] = useState(\"\");\n    const [currency, setCurrency] = useState(\"\");\n    const [bonus, setBonus] = useState(\"\");\n    const [gender, setGender] = useState(\"\");\n    const [validated, setValidated] = useState(false);\n\n    const onSubmitForm = async (e) => {\n        e.preventDefault();\n        try {\n            const body = {\n                company, company_location, title, level,\n                total_xp, at_company_xp, salary, currency, bonus,\n                gender\n            };\n            await fetch(\"http://localhost:5000/add_salary\", {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(body)\n            });\n            window.location = \"/add_salary\";\n        } catch (err) {\n            console.error(err.message);\n        }\n    };\n\n    // const handleSubmit = (event) => {\n    //   const form = event.currentTarget;\n    //   if (form.checkValidity() === false) {\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //   }\n    //   setValidated(true);\n    // };\n\n    return (\n        <Fragment>\n            <Form\n                onSubmit={onSubmitForm}\n                style={{ width: 450, margin: \"auto\" }}\n                className=\"mt-5\"\n                noValidate\n                validated={validated}\n            >\n                <Row className=\"mb-3\">\n                    <Form.Group as={Col}>\n                        <FloatingLabel\n                            label=\"Company\"\n                            className=\"mb-3\"\n                        >\n                            <Form.Control\n                                name=\"company\"\n                                type=\"text\"\n                                placeholder=\"Company\"\n                                value={company}\n                                onChange={e => setCompany(e.target.value)}\n                                required\n                            />\n                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                        </FloatingLabel>\n                    </Form.Group>\n\n                    <Form.Group as={Col}>\n                        <FloatingLabel\n                            label=\"Company Location\"\n                            className=\"mb-3\"\n                        >\n                            <Form.Select\n                                name=\"company_location\"\n                                value={company_location}\n                                onChange={e => setLocation(e.target.value)}\n                            >\n                                <option value=\"\" disabled defaultValue hidden>Select...</option>\n                                <option value=\"colombia\">Colombia</option>\n                                <option value=\"usa\">USA</option>\n                                <option value=\"canada\">Canada</option>\n                                <option value=\"latam\">Latin America (other than Colombia)</option>\n                                <option value=\"olatam\">Outside Latin America</option>\n                            </Form.Select>\n                        </FloatingLabel>\n                    </Form.Group>\n                </Row>\n\n                <Row className=\"mb-3\">\n                    <Form.Group as={Col}>\n                        <FloatingLabel\n                            label=\"Job Position\"\n                            className=\"mb-3\"\n                        >\n                            <Form.Select\n                                name=\"title\"\n                                value={title}\n                                onChange={e => setPosition(e.target.value)}\n                            >\n                                <option value=\"\" disabled defaultValue hidden>Select...</option>\n                                <option value=\"software_engineer\">Software Engineer</option>\n                                <option value=\"machine_learning\">Machine Learning</option>\n                                <option value=\"security\">Security</option>\n                                <option value=\"full_stack\">Full Stack</option>\n                                <option value=\"api\">API</option>\n                                <option value=\"data\">Data</option>\n                                <option value=\"web_development\">Web Development</option>\n                                <option value=\"qa\">QA</option>\n                                <option value=\"devops\">DevOps</option>\n                                <option value=\"site_reliability\">Site_Reliability</option>\n                                <option value=\"distributed_systems\">Distributed Systems</option>\n                            </Form.Select>\n                        </FloatingLabel>\n                    </Form.Group>\n\n                    <Form.Group as={Col}>\n                        <FloatingLabel\n                            label=\"Job Level\"\n                            className=\"mb-3\"\n                        >\n                            <Form.Select\n                                name=\"level\"\n                                value={level}\n                                onChange={e => setLevel(e.target.value)}\n                            >\n                                <option value=\"\" disabled defaultValue hidden>Select...</option>\n                                <option value=\"intern\">Intern</option>\n                                <option value=\"junior\">Junior</option>\n                                <option value=\"mid\">Mid</option>\n                                <option value=\"senior\">Senior</option>\n                                <option value=\"leader\">Leader</option>\n                                <option value=\"management_roll\">Management Roll</option>\n                            </Form.Select>\n                        </FloatingLabel>\n                    </Form.Group>\n                </Row>\n\n                <Row className=\"mb-3\">\n                    <Form.Group as={Col}>\n                        <FloatingLabel\n                            label=\"Years of Experience\"\n                            className=\"mb-3\"\n                        >\n                            <Form.Control\n                                name=\"total_xp\"\n                                type=\"text\"\n                                placeholder=\"Years of Experience\"\n                                value={total_xp}\n                                onChange={e => setExpTotal(e.target.value)}\n                            />\n                        </FloatingLabel>\n                    </Form.Group>\n\n                    <Form.Group as={Col}>\n                        <FloatingLabel\n                            label=\"Years at Company\"\n                            className=\"mb-3\"\n                        >\n                            <Form.Control\n                                name=\"at_company_xp\"\n                                type=\"text\"\n                                placeholder=\"Years at Company\"\n                                value={at_company_xp}\n                                onChange={e => setExpCompany(e.target.value)}\n                            />\n                        </FloatingLabel>\n                    </Form.Group>\n                </Row>\n\n                <Row className=\"mb-3\">\n                    <Form.Group as={Col}>\n                        <FloatingLabel\n                            label=\"Monthly Salary\"\n                            className=\"mb-3\"\n                        >\n                            <Form.Control\n                                name=\"salary\"\n                                type=\"text\"\n                                placeholder=\"Monthly Salary\"\n                                value={salary}\n                                onChange={e => setSalary(e.target.value)}\n                            />\n                        </FloatingLabel>\n                    </Form.Group>\n\n                    <Form.Group as={Col}>\n                        <FloatingLabel\n                            label=\"Bonus\"\n                            className=\"mb-3\"\n                        >\n                            <Form.Control\n                                name=\"bonus\"\n                                type=\"text\"\n                                placeholder=\"Bonus\"\n                                value={bonus}\n                                onChange={e => setBonus(e.target.value)}\n                            />\n                        </FloatingLabel>\n                    </Form.Group>\n\n                    <Form.Group as={Col}>\n                        <FloatingLabel\n                            label=\"Currency\"\n                            className=\"mb-3\"\n                        >\n                            <Form.Select\n                                name=\"currency\"\n                                value={currency}\n                                onChange={e => setCurrency(e.target.value)}\n                            >\n                                <option value=\"\" disabled defaultValue hidden>Select...</option>\n                                <option value=\"COP\">CoP</option>\n                                <option value=\"USD\">U$D</option>\n                                <option value=\"euro\">Euro</option>\n                                <option value=\"brazilian_real\">Brazilian Real</option>\n                                <option value=\"chilean_peso\">Chilean Peso</option>\n                                <option value=\"argentina_peso\">Argentina Peso</option>\n                            </Form.Select>\n                        </FloatingLabel>\n                    </Form.Group>\n                </Row>\n\n                <Form.Group>\n                    <FloatingLabel\n                        label=\"Gender\"\n                        className=\"mb-3\"\n                    >\n                        <Form.Select\n                            name=\"currency\"\n                            value={gender}\n                            onChange={e => setGender(e.target.value)}\n                        >\n                            <option value=\"\" disabled defaultValue hidden>Select...</option>\n                            <option value=\"male\">Male</option>\n                            <option value=\"female\">Female</option>\n                            <option value=\"other\">Other</option>\n                            <option value=\"prefer_not_to_say\">Prefer not to say</option>\n                        </Form.Select>\n                    </FloatingLabel>\n                </Form.Group>\n\n                <Button variant=\"primary\" type=\"submit\">\n                    Submit\n                </Button>\n            </Form>\n\n        </Fragment>\n    )\n};\n\nexport default Survey;\n","/root/capstone_project/client/src/Components/footer.js",[],"/root/capstone_project/client/src/Components/ListLevels.js",["90","91","92"],"/root/capstone_project/client/src/Components/home_sidebar.js",["93"],"import React, { Fragment } from 'react';\nimport { Container, Image } from 'react-bootstrap'\nimport income from './images/income.png'\n\n\nconst HomeSideBar = () => {\n    return (\n        <div>\n            <Container fluid>\n                <button className='btn hover-shadow' href=\"#auth0\" style={{\n                    background: '#E4D8DC',\n                    border: 'dashed',\n                    fontSize: '18px',\n                }}>\n                    <Image src={income}\n                        height='32'\n                        style={{\n                            margin: '5px 5px 5px 5px'\n                        }}\n                    />\n                    <p style={{ fontSize: '16px', fontStyle: 'italic' }}>\n                        Add Your Salary\n                    </p>\n                </button>\n            </Container>\n        </div>\n    )\n};\n\nexport default HomeSideBar;","/root/capstone_project/client/src/Components/searchbar.js",["94"],"import * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\nimport { auto } from 'async';\n\nconst filter = createFilterOptions();\n\nexport default function SearchBar() {\n    const [value, setValue] = React.useState(null);\n\n    return (\n        <Autocomplete\n            value={value}\n            onChange={(event, newValue) => {\n                if (typeof newValue === 'string') {\n                    setValue({\n                        title: newValue,\n                    });\n                } else if (newValue && newValue.inputValue) {\n                    // Create a new value from the user input\n                    setValue({\n                        title: newValue.inputValue,\n                    });\n                } else {\n                    setValue(newValue);\n                }\n            }}\n            filterOptions={(options, params) => {\n                const filtered = filter(options, params);\n\n                const { inputValue } = params;\n                // Suggest the creation of a new value\n                const isExisting = options.some((option) => inputValue === option.title);\n                if (inputValue !== '' && !isExisting) {\n                    filtered.push({\n                        inputValue,\n                        title: `\"${inputValue}\" hasn't been added yet`,\n                    });\n                }\n                return filtered;\n            }}\n            selectOnFocus\n            clearOnBlur\n            handleHomeEndKeys\n            id=\"free-solo-with-text-demo\"\n            options={top100Films}\n            getOptionLabel={(option) => {\n                // Value selected with enter, right from the input\n                if (typeof option === 'string') {\n                    return option;\n                }\n                // Add \"xxx\" option created dynamically\n                if (option.inputValue) {\n                    return option.inputValue;\n                }\n                // Regular option\n                return option.title;\n            }}\n            renderOption={(props, option) => <li {...props}>{option.title}</li>}\n            sx={{ width: 'flex', margin: '5px 5px 20px -5px' }}\n            freeSolo\n            renderInput={(params) => (\n                <TextField {...params} label=\"Search Company...\" />\n            )}\n        />\n    );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n    { title: 'The Shawshank Redemption', year: 1994 },\n    { title: 'The Godfather', year: 1972 },\n    { title: 'The Godfather: Part II', year: 1974 },\n    { title: 'The Dark Knight', year: 2008 },\n    { title: '12 Angry Men', year: 1957 },\n    { title: \"Schindler's List\", year: 1993 },\n    { title: 'Pulp Fiction', year: 1994 },\n    {\n        title: 'The Lord of the Rings: The Return of the King',\n        year: 2003,\n    },\n    { title: 'The Good, the Bad and the Ugly', year: 1966 },\n    { title: 'Fight Club', year: 1999 },\n    {\n        title: 'The Lord of the Rings: The Fellowship of the Ring',\n        year: 2001,\n    },\n    {\n        title: 'Star Wars: Episode V - The Empire Strikes Back',\n        year: 1980,\n    },\n    { title: 'Forrest Gump', year: 1994 },\n    { title: 'Inception', year: 2010 },\n    {\n        title: 'The Lord of the Rings: The Two Towers',\n        year: 2002,\n    },\n    { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n    { title: 'Goodfellas', year: 1990 },\n    { title: 'The Matrix', year: 1999 },\n    { title: 'Seven Samurai', year: 1954 },\n    {\n        title: 'Star Wars: Episode IV - A New Hope',\n        year: 1977,\n    },\n    { title: 'City of God', year: 2002 },\n    { title: 'Se7en', year: 1995 },\n    { title: 'The Silence of the Lambs', year: 1991 },\n    { title: \"It's a Wonderful Life\", year: 1946 },\n    { title: 'Life Is Beautiful', year: 1997 },\n    { title: 'The Usual Suspects', year: 1995 },\n    { title: 'Léon: The Professional', year: 1994 },\n    { title: 'Spirited Away', year: 2001 },\n    { title: 'Saving Private Ryan', year: 1998 },\n    { title: 'Once Upon a Time in the West', year: 1968 },\n    { title: 'American History X', year: 1998 },\n    { title: 'Interstellar', year: 2014 },\n    { title: 'Casablanca', year: 1942 },\n    { title: 'City Lights', year: 1931 },\n    { title: 'Psycho', year: 1960 },\n    { title: 'The Green Mile', year: 1999 },\n    { title: 'The Intouchables', year: 2011 },\n    { title: 'Modern Times', year: 1936 },\n    { title: 'Raiders of the Lost Ark', year: 1981 },\n    { title: 'Rear Window', year: 1954 },\n    { title: 'The Pianist', year: 2002 },\n    { title: 'The Departed', year: 2006 },\n    { title: 'Terminator 2: Judgment Day', year: 1991 },\n    { title: 'Back to the Future', year: 1985 },\n    { title: 'Whiplash', year: 2014 },\n    { title: 'Gladiator', year: 2000 },\n    { title: 'Memento', year: 2000 },\n    { title: 'The Prestige', year: 2006 },\n    { title: 'The Lion King', year: 1994 },\n    { title: 'Apocalypse Now', year: 1979 },\n    { title: 'Alien', year: 1979 },\n    { title: 'Sunset Boulevard', year: 1950 },\n    {\n        title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n        year: 1964,\n    },\n    { title: 'The Great Dictator', year: 1940 },\n    { title: 'Cinema Paradiso', year: 1988 },\n    { title: 'The Lives of Others', year: 2006 },\n    { title: 'Grave of the Fireflies', year: 1988 },\n    { title: 'Paths of Glory', year: 1957 },\n    { title: 'Django Unchained', year: 2012 },\n    { title: 'The Shining', year: 1980 },\n    { title: 'WALL·E', year: 2008 },\n    { title: 'American Beauty', year: 1999 },\n    { title: 'The Dark Knight Rises', year: 2012 },\n    { title: 'Princess Mononoke', year: 1997 },\n    { title: 'Aliens', year: 1986 },\n    { title: 'Oldboy', year: 2003 },\n    { title: 'Once Upon a Time in America', year: 1984 },\n    { title: 'Witness for the Prosecution', year: 1957 },\n    { title: 'Das Boot', year: 1981 },\n    { title: 'Citizen Kane', year: 1941 },\n    { title: 'North by Northwest', year: 1959 },\n    { title: 'Vertigo', year: 1958 },\n    {\n        title: 'Star Wars: Episode VI - Return of the Jedi',\n        year: 1983,\n    },\n    { title: 'Reservoir Dogs', year: 1992 },\n    { title: 'Braveheart', year: 1995 },\n    { title: 'M', year: 1931 },\n    { title: 'Requiem for a Dream', year: 2000 },\n    { title: 'Amélie', year: 2001 },\n    { title: 'A Clockwork Orange', year: 1971 },\n    { title: 'Like Stars on Earth', year: 2007 },\n    { title: 'Taxi Driver', year: 1976 },\n    { title: 'Lawrence of Arabia', year: 1962 },\n    { title: 'Double Indemnity', year: 1944 },\n    {\n        title: 'Eternal Sunshine of the Spotless Mind',\n        year: 2004,\n    },\n    { title: 'Amadeus', year: 1984 },\n    { title: 'To Kill a Mockingbird', year: 1962 },\n    { title: 'Toy Story 3', year: 2010 },\n    { title: 'Logan', year: 2017 },\n    { title: 'Full Metal Jacket', year: 1987 },\n    { title: 'Dangal', year: 2016 },\n    { title: 'The Sting', year: 1973 },\n    { title: '2001: A Space Odyssey', year: 1968 },\n    { title: \"Singin' in the Rain\", year: 1952 },\n    { title: 'Toy Story', year: 1995 },\n    { title: 'Bicycle Thieves', year: 1948 },\n    { title: 'The Kid', year: 1921 },\n    { title: 'Inglourious Basterds', year: 2009 },\n    { title: 'Snatch', year: 2000 },\n    { title: '3 Idiots', year: 2009 },\n    { title: 'Monty Python and the Holy Grail', year: 1975 },\n];","/root/capstone_project/client/src/Components/BarByCompany.js",["95"],"import React, { useEffect, useState } from \"react\";\nimport { Bar } from 'react-chartjs-2';\nimport { useLocation } from 'react-router-dom';\n\nconst BarByCompany = () => {\n  const { data } = useLocation();\n  console.log(data[2]);  \n  const [dict, setDict] = useState([]);\n  const getDict = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/by_company/${data[0]}/${data[1]}`);\n      const jsonData = await response.json();\n      setDict(jsonData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const level_list = [];\n  for (const key in dict.salary_by_level) {\n    level_list.push(dict.salary_by_level[key]);\n  }\n\n  useEffect(() => {\n    getDict();\n  }, []);\n\n  return (\n    <div>\n      <Bar\n        data={{\n          labels: ['L0', 'L1', 'L2', 'L3', 'L4', 'L5'],\n          datasets: [\n            {\n              label: 'SALARY VS LEVEL',\n              data: level_list,\n              backgroundColor: [\n                'rgba(255, 99, 132, 0.5)',\n                'rgba(54, 162, 235, 0.5)',\n                'rgba(255, 206, 86, 0.5)',\n                'rgba(75, 192, 192, 0.5)',\n                'rgba(153, 102, 255, 0.5)',\n                'rgba(255, 159, 64, 0.5)'\n              ],\n              borderColor: [\n                'rgba(255, 99, 132, 1)',\n                'rgba(54, 162, 235, 1)',\n                'rgba(255, 206, 86, 1)',\n                'rgba(75, 192, 192, 1)',\n                'rgba(153, 102, 255, 1)',\n                'rgba(255, 159, 64, 1)'\n              ],\n              borderWidth: 0.5,\n            },\n          ],\n        }}\n        height={400}\n        width={600}\n        options={{\n          maintainAspectRatio: false,\n          scales: {\n            yAxes: [\n              {\n                ticks: {\n                  beginAtZero: true,\n                }\n              }\n            ]\n          },\n          plugins: {\n            legend: {\n              labels: {\n                font: {\n                  size: 14\n                }\n              }\n            }\n          }\n        }}\n      />\n    </div>\n  )\n}\n\nexport default BarByCompany;\n","/root/capstone_project/client/src/Components/DouByCompany.js",["96"],"import React, { useEffect, useState } from \"react\";\nimport { Doughnut } from 'react-chartjs-2';\nimport { useLocation } from 'react-router-dom';\n\nconst DouByCompany = () => {\n  const { data } = useLocation();\n\n  const [dict, setDict] = useState([]);\n  const getDict = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/by_company/${data[0]}/${data[1]}`);\n      const jsonData = await response.json();\n      setDict(jsonData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    getDict();\n  }, []);\n\n  return (\n    <div>\n      <Doughnut\n        data={{\n          labels: ['Average Salary', 'Average Bonus'],\n          datasets: [\n            {\n              label: 'AVERAGE',\n              data: [ dict.average_salary, dict.average_bonus],\n              backgroundColor: [\n                'rgba(255, 99, 132, 0.5)',\n                'rgba(54, 162, 235, 0.5)',\n              ],\n              borderColor: [\n                'rgba(255, 99, 132, 1)',\n                'rgba(54, 162, 235, 1)',\n              ],\n              borderWidth: 0.5,\n            },\n          ],\n        }}\n        height={400}\n        width={600}\n        options={{\n          maintainAspectRatio: false,\n          scales: {\n            yAxes: [\n              {\n                ticks: {\n                  beginAtZero: true,\n                }\n              }\n            ]\n          },\n          plugins: {\n            legend: {\n              labels: {\n                font: {\n                  size: 14\n                }\n              }\n            }\n          }\n        }}\n      />\n    </div>\n  )\n}\n\nexport default DouByCompany;\n","/root/capstone_project/client/src/Components/ListCompanies.js",[],"/root/capstone_project/client/src/Components/CardCompany.js",[],"/root/capstone_project/client/src/Components/levels.js",["97","98","99","100","101"],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":12,"column":8,"nodeType":"108","messageId":"109","endLine":12,"endColumn":18},{"ruleId":"106","severity":1,"message":"110","line":9,"column":8,"nodeType":"108","messageId":"109","endLine":9,"endColumn":28},{"ruleId":"106","severity":1,"message":"111","line":21,"column":23,"nodeType":"108","messageId":"109","endLine":21,"endColumn":35},{"ruleId":"106","severity":1,"message":"112","line":1,"column":38,"nodeType":"108","messageId":"109","endLine":1,"endColumn":46},{"ruleId":"106","severity":1,"message":"113","line":7,"column":8,"nodeType":"108","messageId":"109","endLine":7,"endColumn":14},{"ruleId":"106","severity":1,"message":"114","line":42,"column":11,"nodeType":"108","messageId":"109","endLine":42,"endColumn":14},{"ruleId":"106","severity":1,"message":"112","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":25},{"ruleId":"106","severity":1,"message":"115","line":4,"column":10,"nodeType":"108","messageId":"109","endLine":4,"endColumn":14},{"ruleId":"116","severity":1,"message":"117","line":26,"column":6,"nodeType":"118","endLine":26,"endColumn":8,"suggestions":"119"},{"ruleId":"116","severity":1,"message":"117","line":21,"column":6,"nodeType":"118","endLine":21,"endColumn":8,"suggestions":"120"},{"ruleId":"106","severity":1,"message":"121","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":26},{"ruleId":"106","severity":1,"message":"122","line":1,"column":28,"nodeType":"108","messageId":"109","endLine":1,"endColumn":36},{"ruleId":"106","severity":1,"message":"112","line":1,"column":38,"nodeType":"108","messageId":"109","endLine":1,"endColumn":46},{"ruleId":"106","severity":1,"message":"123","line":6,"column":8,"nodeType":"108","messageId":"109","endLine":6,"endColumn":22},{"ruleId":"106","severity":1,"message":"124","line":8,"column":8,"nodeType":"108","messageId":"109","endLine":8,"endColumn":23},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"no-unused-vars","'Navigation' is defined but never used.","Identifier","unusedVar","'FreeSoloCreateOption' is defined but never used.","'setValidated' is assigned a value but never used.","'Fragment' is defined but never used.","'Avatar' is defined but never used.","'ran' is assigned a value but never used.","'auto' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getDict'. Either include it or remove the dependency array.","ArrayExpression",["127"],["128"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'ListItemAvatar' is defined but never used.","'AttachMoneyIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"129","fix":"130"},{"desc":"129","fix":"131"},"Update the dependencies array to be: [getDict]",{"range":"132","text":"133"},{"range":"134","text":"133"},[704,706],"[getDict]",[562,564]]