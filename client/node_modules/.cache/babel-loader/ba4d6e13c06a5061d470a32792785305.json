{"ast":null,"code":"var _jsxFileName = \"/root/capstone_project/client/src/Components/ScatterByPosition.js\";\nimport React from \"react\";\nimport Chart from \"react-google-charts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [['Salary', 'Level'], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5], [67, 88, 77, 93, 85, 91, 71, 78, 93, 80, 82, 75, 80, 90, 72, 75, 68, 98, 82, 94, 79, 95, 86, 67, 60, 80, 92, 81, 79, 91]];\nconst options = {\n  chart: {\n    title: \"Students' Final Grades\",\n    subtitle: 'based on hours studied'\n  },\n  hAxis: {\n    title: 'Hours Studied'\n  },\n  vAxis: {\n    title: 'Grade'\n  }\n};\n\nconst ScatterByPosition = () => {\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    chartType: \"ScatterChart\",\n    rows: [[8, 12], [4, 5.5], [11, 14], [4, 5], [3, 3.5], [6.5, 7]],\n    columns: [{\n      type: \"number\",\n      label: \"Age\"\n    }, {\n      type: \"number\",\n      label: \"Weight\"\n    }],\n    options: // Chart options\n    {\n      title: \"Age vs. Weight comparison\",\n      hAxis: {\n        title: \"Age\",\n        viewWindow: {\n          min: 0,\n          max: 15\n        }\n      },\n      vAxis: {\n        title: \"Weight\",\n        viewWindow: {\n          min: 0,\n          max: 15\n        }\n      },\n      legend: \"none\"\n    },\n    width: \"100%\",\n    height: \"400px\",\n    legendToggle: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ScatterByPosition;\nexport default ScatterByPosition;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScatterByPosition\");","map":{"version":3,"sources":["/root/capstone_project/client/src/Components/ScatterByPosition.js"],"names":["React","Chart","data","options","chart","title","subtitle","hAxis","vAxis","ScatterByPosition","type","label","viewWindow","min","max","legend"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;AAEA,MAAMC,IAAI,GAAG,CACX,CAAC,QAAD,EAAW,OAAX,CADW,EAEX,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC,EAAqC,CAArC,EAAwC,CAAxC,EAA2C,CAA3C,EAA8C,CAA9C,EAAiD,CAAjD,EAAoD,CAApD,EAAuD,CAAvD,EAA0D,CAA1D,EAA6D,CAA7D,EAAgE,CAAhE,EAAmE,CAAnE,EAAsE,CAAtE,EAAyE,CAAzE,EAA4E,CAA5E,EAA+E,CAA/E,EAAkF,CAAlF,EAAqF,CAArF,EAAwF,CAAxF,CAFW,EAGX,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B,EAAiC,EAAjC,EAAqC,EAArC,EAAyC,EAAzC,EAA6C,EAA7C,EAAiD,EAAjD,EAAqD,EAArD,EAAyD,EAAzD,EAA6D,EAA7D,EAAiE,EAAjE,EAAqE,EAArE,EAAyE,EAAzE,EAA6E,EAA7E,EAAiF,EAAjF,EAAqF,EAArF,EAAyF,EAAzF,EAA6F,EAA7F,EAAiG,EAAjG,EAAqG,EAArG,EAAyG,EAAzG,EAA6G,EAA7G,EAAiH,EAAjH,EAAqH,EAArH,CAHW,CAAb;AAOA,MAAMC,OAAO,GAAG;AACdC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE,wBADF;AAELC,IAAAA,QAAQ,EAAE;AAFL,GADO;AAKdC,EAAAA,KAAK,EAAE;AAAEF,IAAAA,KAAK,EAAE;AAAT,GALO;AAMdG,EAAAA,KAAK,EAAE;AAAEH,IAAAA,KAAK,EAAE;AAAT;AANO,CAAhB;;AAQA,MAAMI,iBAAiB,GAAG,MAAM;AAC9B,sBACE,QAAC,KAAD;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,IAAI,EAAE,CAAC,CAAC,CAAD,EAAI,EAAJ,CAAD,EAAU,CAAC,CAAD,EAAI,GAAJ,CAAV,EAAoB,CAAC,EAAD,EAAK,EAAL,CAApB,EAA8B,CAAC,CAAD,EAAI,CAAJ,CAA9B,EAAsC,CAAC,CAAD,EAAI,GAAJ,CAAtC,EAAgD,CAAC,GAAD,EAAM,CAAN,CAAhD,CAFR;AAGE,IAAA,OAAO,EAAE,CACP;AACEC,MAAAA,IAAI,EAAE,QADR;AAEEC,MAAAA,KAAK,EAAE;AAFT,KADO,EAKP;AACED,MAAAA,IAAI,EAAE,QADR;AAEEC,MAAAA,KAAK,EAAE;AAFT,KALO,CAHX;AAaE,IAAA,OAAO,EACL;AACA;AACEN,MAAAA,KAAK,EAAE,2BADT;AAEEE,MAAAA,KAAK,EAAE;AACLF,QAAAA,KAAK,EAAE,KADF;AAELO,QAAAA,UAAU,EAAE;AAAEC,UAAAA,GAAG,EAAE,CAAP;AAAUC,UAAAA,GAAG,EAAE;AAAf;AAFP,OAFT;AAMEN,MAAAA,KAAK,EAAE;AAAEH,QAAAA,KAAK,EAAE,QAAT;AAAmBO,QAAAA,UAAU,EAAE;AAAEC,UAAAA,GAAG,EAAE,CAAP;AAAUC,UAAAA,GAAG,EAAE;AAAf;AAA/B,OANT;AAOEC,MAAAA,MAAM,EAAE;AAPV,KAfJ;AAyBE,IAAA,KAAK,EAAE,MAzBT;AA0BE,IAAA,MAAM,EAAE,OA1BV;AA2BE,IAAA,YAAY;AA3Bd;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CAhCD;;KAAMN,iB;AAiCN,eAAeA,iBAAf","sourcesContent":["import React from \"react\";\nimport Chart from \"react-google-charts\";\n\nconst data = [\n  ['Salary', 'Level'],\n  [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5],\n  [67, 88, 77, 93, 85, 91, 71, 78, 93, 80, 82, 75, 80, 90, 72, 75, 68, 98, 82, 94, 79, 95, 86, 67, 60, 80, 92, 81, 79, 91],\n\n];\n\nconst options = {\n  chart: {\n    title: \"Students' Final Grades\",\n    subtitle: 'based on hours studied',\n  },\n  hAxis: { title: 'Hours Studied' },\n  vAxis: { title: 'Grade' },\n};\nconst ScatterByPosition = () => {\n  return (\n    <Chart\n      chartType=\"ScatterChart\"\n      rows={[[8, 12], [4, 5.5], [11, 14], [4, 5], [3, 3.5], [6.5, 7]]}\n      columns={[\n        {\n          type: \"number\",\n          label: \"Age\"\n        },\n        {\n          type: \"number\",\n          label: \"Weight\"\n        }\n      ]}\n      options={\n        // Chart options\n        {\n          title: \"Age vs. Weight comparison\",\n          hAxis: {\n            title: \"Age\",\n            viewWindow: { min: 0, max: 15 }\n          },\n          vAxis: { title: \"Weight\", viewWindow: { min: 0, max: 15 } },\n          legend: \"none\"\n        }\n      }\n      width={\"100%\"}\n      height={\"400px\"}\n      legendToggle\n    />\n  );\n}\nexport default ScatterByPosition;\n"]},"metadata":{},"sourceType":"module"}