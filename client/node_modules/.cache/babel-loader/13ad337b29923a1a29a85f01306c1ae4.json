{"ast":null,"code":"import _regeneratorRuntime from\"/root/capstone_project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/root/capstone_project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/root/capstone_project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState,Fragment}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Levels=function Levels(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),dict=_useState2[0],setDict=_useState2[1];var level=[\"L0\",\"L1\",\"L2\",\"L3\",\"L4\",\"L5\"];var getDict=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(comp){var response,jsonData;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch(\"http://localhost:5000/by_company\");case 3:response=_context.sent;_context.next=6;return response.json();case 6:jsonData=_context.sent;setDict(jsonData);_context.next=13;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](0);console.error(_context.t0.message);case 13:case\"end\":return _context.stop();}}},_callee,null,[[0,10]]);}));return function getDict(_x){return _ref.apply(this,arguments);};}();useEffect(function(){getDict();},[]);var level_list=[];if(dict){var l={\"L0\":\"No data\",\"L1\":\"No data\",\"L2\":\"No data\",\"L3\":\"No data\",\"L4\":\"No data\",\"L5\":\"No data\"};for(var key in l){if(key in dict.company_median_salary[dict.company_name]){l[key]=dict.company_median_salary[dict.company_name][key];}}for(var key2 in l){level_list.push(l[key2]);}}return/*#__PURE__*/_jsxs(\"ul\",{className:\"list-group text-center vertical-align-middle\",style:{width:'100%'},children:[/*#__PURE__*/_jsx(\"li\",{className:\"list-group-item active \",style:{background:\"#DEE0E6\",color:\"black\",borderColor:\"white\",justifyContent:'center',alignItems:'center',display:'flex'},children:dict?dict.company_name:\"No data\"}),level_list.map(function(value){return/*#__PURE__*/_jsxs(\"li\",{className:\"list-group-item \",style:{height:'60px',borderRightColor:\"#B0B0B000\",borderLeftColor:\"#B0B0B000\",justifyContent:'center',alignItems:'center',display:'flex'},children:[value,\" USD\"]},value);})]});};export default Levels;","map":{"version":3,"sources":["/root/capstone_project/client/src/Components/levels.js"],"names":["React","useEffect","useState","Fragment","Levels","dict","setDict","level","getDict","comp","fetch","response","json","jsonData","console","error","message","level_list","l","key","company_median_salary","company_name","key2","push","width","background","color","borderColor","justifyContent","alignItems","display","map","value","height","borderRightColor","borderLeftColor"],"mappings":"ybAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,CAAqCC,QAArC,KAAqD,OAArD,C,wFAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CAEjB,cAAwBF,QAAQ,CAAC,IAAD,CAAhC,wCAAOG,IAAP,eAAaC,OAAb,eACA,GAAMC,CAAAA,KAAK,CAAG,CAAC,IAAD,CAAO,IAAP,CAAa,IAAb,CAAmB,IAAnB,CAAyB,IAAzB,CAA+B,IAA/B,CAAd,CAEA,GAAMC,CAAAA,OAAO,0FAAG,iBAAOC,IAAP,8KAEeC,CAAAA,KAAK,CAAC,kCAAD,CAFpB,QAEFC,QAFE,qCAGeA,CAAAA,QAAQ,CAACC,IAAT,EAHf,QAGFC,QAHE,eAIRP,OAAO,CAACO,QAAD,CAAP,CAJQ,iFAMRC,OAAO,CAACC,KAAR,CAAc,YAAIC,OAAlB,EANQ,qEAAH,kBAAPR,CAAAA,OAAO,4CAAb,CAUAP,SAAS,CAAC,UAAM,CACZO,OAAO,GACV,CAFQ,CAEN,EAFM,CAAT,CAIA,GAAIS,CAAAA,UAAU,CAAG,EAAjB,CACA,GAAIZ,IAAJ,CAAU,CACN,GAAMa,CAAAA,CAAC,CAAG,CAAE,KAAM,SAAR,CAAmB,KAAM,SAAzB,CAAoC,KAAM,SAA1C,CAAqD,KAAM,SAA3D,CAAsE,KAAM,SAA5E,CAAuF,KAAM,SAA7F,CAAV,CAEA,IAAK,GAAMC,CAAAA,GAAX,GAAkBD,CAAAA,CAAlB,CAAqB,CACjB,GAAIC,GAAG,GAAId,CAAAA,IAAI,CAACe,qBAAL,CAA2Bf,IAAI,CAACgB,YAAhC,CAAX,CAA0D,CACtDH,CAAC,CAACC,GAAD,CAAD,CAASd,IAAI,CAACe,qBAAL,CAA2Bf,IAAI,CAACgB,YAAhC,EAA8CF,GAA9C,CAAT,CACH,CACJ,CACD,IAAK,GAAMG,CAAAA,IAAX,GAAmBJ,CAAAA,CAAnB,CAAsB,CAClBD,UAAU,CAACM,IAAX,CAAgBL,CAAC,CAACI,IAAD,CAAjB,EACH,CACJ,CAED,mBAEI,YAAI,SAAS,CAAC,8CAAd,CAA6D,KAAK,CAAE,CAAEE,KAAK,CAAE,MAAT,CAApE,wBACI,WAAI,SAAS,CAAC,yBAAd,CAAwC,KAAK,CAAE,CAC3CC,UAAU,CAAE,SAD+B,CAE3CC,KAAK,CAAE,OAFoC,CAG3CC,WAAW,CAAE,OAH8B,CAI3CC,cAAc,CAAE,QAJ2B,CAK3CC,UAAU,CAAE,QAL+B,CAM3CC,OAAO,CAAE,MANkC,CAA/C,UAQKzB,IAAI,CAAGA,IAAI,CAACgB,YAAR,CAAuB,SARhC,EADJ,CAWKJ,UAAU,CAACc,GAAX,CAAe,SAAAC,KAAK,qBACjB,YAAI,SAAS,CAAC,kBAAd,CAA6C,KAAK,CAAE,CAChDC,MAAM,CAAE,MADwC,CAEhDC,gBAAgB,CAAE,WAF8B,CAGhDC,eAAe,CAAE,WAH+B,CAIhDP,cAAc,CAAE,QAJgC,CAKhDC,UAAU,CAAE,QALoC,CAMhDC,OAAO,CAAE,MANuC,CAApD,WAQKE,KARL,UAAsCA,KAAtC,CADiB,EAApB,CAXL,GAFJ,CA2BH,CA5DD,CA8DA,cAAe5B,CAAAA,MAAf","sourcesContent":["import React, { useEffect, useState, Fragment } from \"react\";\n\nconst Levels = () => {\n\n    const [dict, setDict] = useState(null);\n    const level = [\"L0\", \"L1\", \"L2\", \"L3\", \"L4\", \"L5\"];\n\n    const getDict = async (comp) => {\n        try {\n            const response = await fetch(\"http://localhost:5000/by_company\");\n            const jsonData = await response.json();\n            setDict(jsonData)\n        } catch (err) {\n            console.error(err.message);\n        }\n    };\n\n    useEffect(() => {\n        getDict();\n    }, []);\n\n    let level_list = [];\n    if (dict) {\n        const l = { \"L0\": \"No data\", \"L1\": \"No data\", \"L2\": \"No data\", \"L3\": \"No data\", \"L4\": \"No data\", \"L5\": \"No data\" };\n\n        for (const key in l) {\n            if (key in dict.company_median_salary[dict.company_name]) {\n                l[key] = dict.company_median_salary[dict.company_name][key];\n            }\n        }\n        for (const key2 in l) {\n            level_list.push(l[key2]);\n        }\n    }\n\n    return (\n\n        <ul className=\"list-group text-center vertical-align-middle\" style={{ width: '100%' }}>\n            <li className=\"list-group-item active \" style={{\n                background: \"#DEE0E6\",\n                color: \"black\",\n                borderColor: \"white\",\n                justifyContent: 'center',\n                alignItems: 'center',\n                display: 'flex'\n            }}>\n                {dict ? dict.company_name : \"No data\"}\n            </li>\n            {level_list.map(value => (\n                <li className=\"list-group-item \" key={value} style={{\n                    height: '60px',\n                    borderRightColor: \"#B0B0B000\",\n                    borderLeftColor: \"#B0B0B000\",\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    display: 'flex'\n                }}>\n                    {value} USD\n                </li>\n            ))}\n        </ul>\n    );\n};\n\nexport default Levels;"]},"metadata":{},"sourceType":"module"}