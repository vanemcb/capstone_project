{"ast":null,"code":"var _jsxFileName = \"/root/capstone_project/client/src/Components/ListCompanies.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport { styled } from '@mui/material/styles';\nimport PopOver from \"./Popover\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Item = styled(Paper)(({\n  theme\n}) => ({ ...theme.typography.body2,\n  padding: theme.spacing(2),\n  textAlign: 'center',\n  color: theme.palette.text.secondary\n}));\n\nconst ListCompanies = () => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [title, setTitle] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [company, setCompany] = useState(\"\");\n  const [open, setOpen] = useState(false);\n\n  const setValue = event => setCompany(event.target.id);\n\n  const handleClickOpen = async e => {\n    setValue(e);\n    getTitles(e.target.id);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  useEffect(async () => {\n    try {\n      //console.log(comp);\n      const response = await fetch(\"http://localhost:5000/by_company/\");\n      const jsonData = await response.json();\n      setData(jsonData);\n      return jsonData;\n    } catch (err) {\n      console.error(err.message);\n    }\n  }, []);\n\n  const getTitles = async comp => {\n    try {\n      //console.log(comp);\n      const response = await fetch(\"http://localhost:5000/by_company/\" + comp);\n      const jsonData = await response.json();\n      setTitle(jsonData);\n      return jsonData;\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  if (loading) return \"Loading...\";\n  if (error) return \"Error!\";\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      style: {\n        width: 650,\n        margin: \"auto\"\n      },\n      className: \"mt-5\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: {\n          xs: 2,\n          md: 3\n        },\n        columns: {\n          xs: 4,\n          sm: 8,\n          md: 16\n        },\n        children: data.map(value => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 2,\n          sm: 4,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Item, {\n            type: \"button\",\n            id: value,\n            onClick: handleClickOpen,\n            children: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this)\n        }, value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PopOver, {\n      open: open,\n      company: company,\n      handleClose: handleClose,\n      title: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ListCompanies, \"A3H4S59GMUct1/I37iqvUNeEi+k=\");\n\n_c = ListCompanies;\nexport default ListCompanies;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListCompanies\");","map":{"version":3,"sources":["/root/capstone_project/client/src/Components/ListCompanies.js"],"names":["React","useEffect","useState","Fragment","Box","Paper","Grid","styled","PopOver","Item","theme","typography","body2","padding","spacing","textAlign","color","palette","text","secondary","ListCompanies","data","setData","title","setTitle","loading","setLoading","error","setError","company","setCompany","open","setOpen","setValue","event","target","id","handleClickOpen","e","getTitles","handleClose","response","fetch","jsonData","json","err","console","message","comp","width","margin","xs","md","sm","map","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, Fragment } from \"react\";\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport { styled } from '@mui/material/styles';\nimport PopOver from \"./Popover\";\n\nconst Item = styled(Paper)(({ theme }) => ({\n    ...theme.typography.body2,\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n}));\n\nconst ListCompanies = () => {\n\n    const [data, setData] = useState(null);\n    const [title, setTitle] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [company, setCompany] = useState(\"\");\n    const [open, setOpen] = useState(false);\n    const setValue = (event) => setCompany(event.target.id)\n\n    const handleClickOpen = async (e) => {\n      setValue(e);\n      getTitles(e.target.id);\n      setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    useEffect(async () => {\n        try {\n            //console.log(comp);\n            const response = await fetch(\"http://localhost:5000/by_company/\");\n            const jsonData = await response.json();\n            setData(jsonData);\n            return jsonData;\n        } catch (err) {\n            console.error(err.message);\n        }\n    }, []);\n\n    const getTitles = async (comp) => {\n        try {\n            //console.log(comp);\n            const response = await fetch(\"http://localhost:5000/by_company/\" + comp);\n            const jsonData = await response.json();\n            setTitle(jsonData);\n            return jsonData;\n        } catch (err) {\n            console.error(err.message);\n        }\n    };\n\n    if (loading) return \"Loading...\";\n    if (error) return \"Error!\";\n\n    return (\n        <Fragment>\n            <Box style={{ width: 650, margin: \"auto\" }} className=\"mt-5\">\n                <Grid container spacing={{ xs: 2, md: 3 }} columns={{ xs: 4, sm: 8, md: 16 }}>\n                    {data.map(value => (\n                        <Grid item xs={2} sm={4} md={4} key={value}>\n                            <Item\n                                type=\"button\"\n                                id={value}\n                                onClick={handleClickOpen}\n                            >{value}\n                            </Item>\n                        </Grid>\n                    ))}\n                </Grid>\n            </Box>\n\n\n            <PopOver open={open} company={company} handleClose={handleClose} title={title} />\n\n        </Fragment>\n    );\n};\n\nexport default ListCompanies;\n"]},"metadata":{},"sourceType":"module"}