{"ast":null,"code":"var _jsxFileName = \"/root/capstone_project/client/src/Components/ListCompanies.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport PropTypes from 'prop-types';\nimport Button from '@mui/material/Button';\nimport { styled } from '@mui/material/styles';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Link from '@mui/material/Link';\nimport PopOver from \"./Popover\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListCompanies = () => {\n  _s();\n\n  const setValue = event => setCompany(event.target.id);\n\n  const [data, setData] = useState(null);\n  const [title, setTitle] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [company, setCompany] = useState(\"\");\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const preventDefault = event => event.preventDefault();\n\n  useEffect(() => {\n    fetch(\"http://localhost:5000/by_company\").then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw response;\n    }).then(data => {\n      setData(data);\n    }).catch(error => {\n      console.error(\"Error fetching data: \", error);\n      setError(error);\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, []);\n  if (loading) return \"Loading...\";\n  if (error) return \"Error!\";\n  console.log(company);\n  console.log(title);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      style: {\n        width: 700,\n        margin: \"auto\"\n      },\n      className: \"mt-5\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: {\n          xs: 2,\n          md: 3\n        },\n        columns: {\n          xs: 4,\n          sm: 8,\n          md: 16\n        },\n        children: data.map(value => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 2,\n          sm: 4,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Item, {\n            type: \"button\",\n            onClick: e => {\n              handleClickOpen(e);\n              setValue(e);\n            },\n            id: value,\n            children: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)\n        }, value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PopOver, {\n      open: open,\n      onClose: handleClose,\n      company: company\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ListCompanies, \"9vKZJpaUxe8r6TGUz01qegwTWsE=\");\n\n_c = ListCompanies;\nexport default ListCompanies;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListCompanies\");","map":{"version":3,"sources":["/root/capstone_project/client/src/Components/ListCompanies.js"],"names":["React","useEffect","useState","Fragment","Box","Paper","Grid","PropTypes","Button","styled","Dialog","DialogTitle","DialogContent","IconButton","CloseIcon","Link","PopOver","ListCompanies","setValue","event","setCompany","target","id","data","setData","title","setTitle","loading","setLoading","error","setError","company","open","setOpen","handleClickOpen","handleClose","preventDefault","fetch","then","response","ok","json","catch","console","finally","log","width","margin","xs","md","sm","map","value","e"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, Fragment } from \"react\";\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport PropTypes from 'prop-types';\nimport Button from '@mui/material/Button';\nimport { styled } from '@mui/material/styles';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Link from '@mui/material/Link';\nimport PopOver from \"./Popover\";\n\nconst ListCompanies= () => {\n\n  const setValue = (event) => setCompany(event.target.id)\n  const [data, setData] = useState(null);\n  const [title, setTitle] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [company, setCompany] = useState(\"\");\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const preventDefault = (event) => event.preventDefault();\n\n  useEffect(() => {\n    fetch(\"http://localhost:5000/by_company\")\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw response;\n      })\n      .then(data => {\n        setData(data);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data: \", error);\n        setError(error);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n  if (loading) return \"Loading...\";\n  if (error) return \"Error!\";\n\n  console.log(company);\n  console.log(title);\n\n\n  return (\n    <Fragment>\n      <Box style={{ width: 700, margin: \"auto\" }} className=\"mt-5\">\n        <Grid container spacing={{ xs: 2, md: 3 }} columns={{ xs: 4, sm: 8, md: 16 }}>\n          {data.map(value => (\n            <Grid item xs={2} sm={4} md={4} key={value}>\n              <Item\n                type=\"button\"\n                onClick={(e) => { handleClickOpen(e); setValue(e)}}\n                id={value}\n                >{value}\n              </Item>\n            </Grid>\n          ))}\n        </Grid>\n      </Box>\n\n      <PopOver open={open} onClose={handleClose} company={company}/>\n\n    </Fragment>\n  );\n};\n\nexport default ListCompanies;"]},"metadata":{},"sourceType":"module"}