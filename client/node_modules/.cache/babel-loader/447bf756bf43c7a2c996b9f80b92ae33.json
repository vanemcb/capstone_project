{"ast":null,"code":"var _jsxFileName = \"/root/capstone_project/client/src/Components/searchbar.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\nimport { auto } from 'async';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst filter = createFilterOptions();\nexport default function FreeSoloCreateOption() {\n  _s();\n\n  const [value, setValue] = React.useState(null);\n  return /*#__PURE__*/_jsxDEV(Autocomplete, {\n    value: value,\n    onChange: (event, newValue) => {\n      if (typeof newValue === 'string') {\n        setValue({\n          title: newValue\n        });\n      } else if (newValue && newValue.inputValue) {\n        // Create a new value from the user input\n        setValue({\n          title: newValue.inputValue\n        });\n      } else {\n        setValue(newValue);\n      }\n    },\n    filterOptions: (options, params) => {\n      const filtered = filter(options, params);\n      const {\n        inputValue\n      } = params; // Suggest the creation of a new value\n\n      const isExisting = options.some(option => inputValue === option.title);\n\n      if (inputValue !== '' && !isExisting) {\n        filtered.push({\n          inputValue,\n          title: `Add \"${inputValue}\"`\n        });\n      }\n\n      return filtered;\n    },\n    selectOnFocus: true,\n    clearOnBlur: true,\n    handleHomeEndKeys: true,\n    id: \"free-solo-with-text-demo\",\n    options: top100Films,\n    getOptionLabel: option => {\n      // Value selected with enter, right from the input\n      if (typeof option === 'string') {\n        return option;\n      } // Add \"xxx\" option created dynamically\n\n\n      if (option.inputValue) {\n        return option.inputValue;\n      } // Regular option\n\n\n      return option.title;\n    },\n    renderOption: (props, option) => /*#__PURE__*/_jsxDEV(\"li\", { ...props,\n      children: option.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 46\n    }, this),\n    sx: {\n      width: 'flex'\n    },\n    freeSolo: true,\n    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n      label: \"Search Company...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n} // Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\n\n_s(FreeSoloCreateOption, \"EEjdpY/CSe7/lDQurV9yi1RbKSs=\");\n\n_c = FreeSoloCreateOption;\nconst top100Films = [{\n  title: 'The Shawshank Redemption',\n  year: 1994\n}, {\n  title: 'The Godfather',\n  year: 1972\n}, {\n  title: 'The Godfather: Part II',\n  year: 1974\n}, {\n  title: 'The Dark Knight',\n  year: 2008\n}, {\n  title: '12 Angry Men',\n  year: 1957\n}, {\n  title: \"Schindler's List\",\n  year: 1993\n}, {\n  title: 'Pulp Fiction',\n  year: 1994\n}, {\n  title: 'The Lord of the Rings: The Return of the King',\n  year: 2003\n}, {\n  title: 'The Good, the Bad and the Ugly',\n  year: 1966\n}, {\n  title: 'Fight Club',\n  year: 1999\n}, {\n  title: 'The Lord of the Rings: The Fellowship of the Ring',\n  year: 2001\n}, {\n  title: 'Star Wars: Episode V - The Empire Strikes Back',\n  year: 1980\n}, {\n  title: 'Forrest Gump',\n  year: 1994\n}, {\n  title: 'Inception',\n  year: 2010\n}, {\n  title: 'The Lord of the Rings: The Two Towers',\n  year: 2002\n}, {\n  title: \"One Flew Over the Cuckoo's Nest\",\n  year: 1975\n}, {\n  title: 'Goodfellas',\n  year: 1990\n}, {\n  title: 'The Matrix',\n  year: 1999\n}, {\n  title: 'Seven Samurai',\n  year: 1954\n}, {\n  title: 'Star Wars: Episode IV - A New Hope',\n  year: 1977\n}, {\n  title: 'City of God',\n  year: 2002\n}, {\n  title: 'Se7en',\n  year: 1995\n}, {\n  title: 'The Silence of the Lambs',\n  year: 1991\n}, {\n  title: \"It's a Wonderful Life\",\n  year: 1946\n}, {\n  title: 'Life Is Beautiful',\n  year: 1997\n}, {\n  title: 'The Usual Suspects',\n  year: 1995\n}, {\n  title: 'Léon: The Professional',\n  year: 1994\n}, {\n  title: 'Spirited Away',\n  year: 2001\n}, {\n  title: 'Saving Private Ryan',\n  year: 1998\n}, {\n  title: 'Once Upon a Time in the West',\n  year: 1968\n}, {\n  title: 'American History X',\n  year: 1998\n}, {\n  title: 'Interstellar',\n  year: 2014\n}, {\n  title: 'Casablanca',\n  year: 1942\n}, {\n  title: 'City Lights',\n  year: 1931\n}, {\n  title: 'Psycho',\n  year: 1960\n}, {\n  title: 'The Green Mile',\n  year: 1999\n}, {\n  title: 'The Intouchables',\n  year: 2011\n}, {\n  title: 'Modern Times',\n  year: 1936\n}, {\n  title: 'Raiders of the Lost Ark',\n  year: 1981\n}, {\n  title: 'Rear Window',\n  year: 1954\n}, {\n  title: 'The Pianist',\n  year: 2002\n}, {\n  title: 'The Departed',\n  year: 2006\n}, {\n  title: 'Terminator 2: Judgment Day',\n  year: 1991\n}, {\n  title: 'Back to the Future',\n  year: 1985\n}, {\n  title: 'Whiplash',\n  year: 2014\n}, {\n  title: 'Gladiator',\n  year: 2000\n}, {\n  title: 'Memento',\n  year: 2000\n}, {\n  title: 'The Prestige',\n  year: 2006\n}, {\n  title: 'The Lion King',\n  year: 1994\n}, {\n  title: 'Apocalypse Now',\n  year: 1979\n}, {\n  title: 'Alien',\n  year: 1979\n}, {\n  title: 'Sunset Boulevard',\n  year: 1950\n}, {\n  title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n  year: 1964\n}, {\n  title: 'The Great Dictator',\n  year: 1940\n}, {\n  title: 'Cinema Paradiso',\n  year: 1988\n}, {\n  title: 'The Lives of Others',\n  year: 2006\n}, {\n  title: 'Grave of the Fireflies',\n  year: 1988\n}, {\n  title: 'Paths of Glory',\n  year: 1957\n}, {\n  title: 'Django Unchained',\n  year: 2012\n}, {\n  title: 'The Shining',\n  year: 1980\n}, {\n  title: 'WALL·E',\n  year: 2008\n}, {\n  title: 'American Beauty',\n  year: 1999\n}, {\n  title: 'The Dark Knight Rises',\n  year: 2012\n}, {\n  title: 'Princess Mononoke',\n  year: 1997\n}, {\n  title: 'Aliens',\n  year: 1986\n}, {\n  title: 'Oldboy',\n  year: 2003\n}, {\n  title: 'Once Upon a Time in America',\n  year: 1984\n}, {\n  title: 'Witness for the Prosecution',\n  year: 1957\n}, {\n  title: 'Das Boot',\n  year: 1981\n}, {\n  title: 'Citizen Kane',\n  year: 1941\n}, {\n  title: 'North by Northwest',\n  year: 1959\n}, {\n  title: 'Vertigo',\n  year: 1958\n}, {\n  title: 'Star Wars: Episode VI - Return of the Jedi',\n  year: 1983\n}, {\n  title: 'Reservoir Dogs',\n  year: 1992\n}, {\n  title: 'Braveheart',\n  year: 1995\n}, {\n  title: 'M',\n  year: 1931\n}, {\n  title: 'Requiem for a Dream',\n  year: 2000\n}, {\n  title: 'Amélie',\n  year: 2001\n}, {\n  title: 'A Clockwork Orange',\n  year: 1971\n}, {\n  title: 'Like Stars on Earth',\n  year: 2007\n}, {\n  title: 'Taxi Driver',\n  year: 1976\n}, {\n  title: 'Lawrence of Arabia',\n  year: 1962\n}, {\n  title: 'Double Indemnity',\n  year: 1944\n}, {\n  title: 'Eternal Sunshine of the Spotless Mind',\n  year: 2004\n}, {\n  title: 'Amadeus',\n  year: 1984\n}, {\n  title: 'To Kill a Mockingbird',\n  year: 1962\n}, {\n  title: 'Toy Story 3',\n  year: 2010\n}, {\n  title: 'Logan',\n  year: 2017\n}, {\n  title: 'Full Metal Jacket',\n  year: 1987\n}, {\n  title: 'Dangal',\n  year: 2016\n}, {\n  title: 'The Sting',\n  year: 1973\n}, {\n  title: '2001: A Space Odyssey',\n  year: 1968\n}, {\n  title: \"Singin' in the Rain\",\n  year: 1952\n}, {\n  title: 'Toy Story',\n  year: 1995\n}, {\n  title: 'Bicycle Thieves',\n  year: 1948\n}, {\n  title: 'The Kid',\n  year: 1921\n}, {\n  title: 'Inglourious Basterds',\n  year: 2009\n}, {\n  title: 'Snatch',\n  year: 2000\n}, {\n  title: '3 Idiots',\n  year: 2009\n}, {\n  title: 'Monty Python and the Holy Grail',\n  year: 1975\n}];\n\nvar _c;\n\n$RefreshReg$(_c, \"FreeSoloCreateOption\");","map":{"version":3,"sources":["/root/capstone_project/client/src/Components/searchbar.js"],"names":["React","TextField","Autocomplete","createFilterOptions","auto","filter","FreeSoloCreateOption","value","setValue","useState","event","newValue","title","inputValue","options","params","filtered","isExisting","some","option","push","top100Films","props","width","year"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\nimport { auto } from 'async';\n\nconst filter = createFilterOptions();\n\nexport default function FreeSoloCreateOption() {\n    const [value, setValue] = React.useState(null);\n\n    return (\n        <Autocomplete\n            value={value}\n            onChange={(event, newValue) => {\n                if (typeof newValue === 'string') {\n                    setValue({\n                        title: newValue,\n                    });\n                } else if (newValue && newValue.inputValue) {\n                    // Create a new value from the user input\n                    setValue({\n                        title: newValue.inputValue,\n                    });\n                } else {\n                    setValue(newValue);\n                }\n            }}\n            filterOptions={(options, params) => {\n                const filtered = filter(options, params);\n\n                const { inputValue } = params;\n                // Suggest the creation of a new value\n                const isExisting = options.some((option) => inputValue === option.title);\n                if (inputValue !== '' && !isExisting) {\n                    filtered.push({\n                        inputValue,\n                        title: `Add \"${inputValue}\"`,\n                    });\n                }\n\n                return filtered;\n            }}\n            selectOnFocus\n            clearOnBlur\n            handleHomeEndKeys\n            id=\"free-solo-with-text-demo\"\n            options={top100Films}\n            getOptionLabel={(option) => {\n                // Value selected with enter, right from the input\n                if (typeof option === 'string') {\n                    return option;\n                }\n                // Add \"xxx\" option created dynamically\n                if (option.inputValue) {\n                    return option.inputValue;\n                }\n                // Regular option\n                return option.title;\n            }}\n            renderOption={(props, option) => <li {...props}>{option.title}</li>}\n            sx={{ width: 'flex' }}\n            freeSolo\n            renderInput={(params) => (\n                <TextField {...params} label=\"Search Company...\" />\n            )}\n        />\n    );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n    { title: 'The Shawshank Redemption', year: 1994 },\n    { title: 'The Godfather', year: 1972 },\n    { title: 'The Godfather: Part II', year: 1974 },\n    { title: 'The Dark Knight', year: 2008 },\n    { title: '12 Angry Men', year: 1957 },\n    { title: \"Schindler's List\", year: 1993 },\n    { title: 'Pulp Fiction', year: 1994 },\n    {\n        title: 'The Lord of the Rings: The Return of the King',\n        year: 2003,\n    },\n    { title: 'The Good, the Bad and the Ugly', year: 1966 },\n    { title: 'Fight Club', year: 1999 },\n    {\n        title: 'The Lord of the Rings: The Fellowship of the Ring',\n        year: 2001,\n    },\n    {\n        title: 'Star Wars: Episode V - The Empire Strikes Back',\n        year: 1980,\n    },\n    { title: 'Forrest Gump', year: 1994 },\n    { title: 'Inception', year: 2010 },\n    {\n        title: 'The Lord of the Rings: The Two Towers',\n        year: 2002,\n    },\n    { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n    { title: 'Goodfellas', year: 1990 },\n    { title: 'The Matrix', year: 1999 },\n    { title: 'Seven Samurai', year: 1954 },\n    {\n        title: 'Star Wars: Episode IV - A New Hope',\n        year: 1977,\n    },\n    { title: 'City of God', year: 2002 },\n    { title: 'Se7en', year: 1995 },\n    { title: 'The Silence of the Lambs', year: 1991 },\n    { title: \"It's a Wonderful Life\", year: 1946 },\n    { title: 'Life Is Beautiful', year: 1997 },\n    { title: 'The Usual Suspects', year: 1995 },\n    { title: 'Léon: The Professional', year: 1994 },\n    { title: 'Spirited Away', year: 2001 },\n    { title: 'Saving Private Ryan', year: 1998 },\n    { title: 'Once Upon a Time in the West', year: 1968 },\n    { title: 'American History X', year: 1998 },\n    { title: 'Interstellar', year: 2014 },\n    { title: 'Casablanca', year: 1942 },\n    { title: 'City Lights', year: 1931 },\n    { title: 'Psycho', year: 1960 },\n    { title: 'The Green Mile', year: 1999 },\n    { title: 'The Intouchables', year: 2011 },\n    { title: 'Modern Times', year: 1936 },\n    { title: 'Raiders of the Lost Ark', year: 1981 },\n    { title: 'Rear Window', year: 1954 },\n    { title: 'The Pianist', year: 2002 },\n    { title: 'The Departed', year: 2006 },\n    { title: 'Terminator 2: Judgment Day', year: 1991 },\n    { title: 'Back to the Future', year: 1985 },\n    { title: 'Whiplash', year: 2014 },\n    { title: 'Gladiator', year: 2000 },\n    { title: 'Memento', year: 2000 },\n    { title: 'The Prestige', year: 2006 },\n    { title: 'The Lion King', year: 1994 },\n    { title: 'Apocalypse Now', year: 1979 },\n    { title: 'Alien', year: 1979 },\n    { title: 'Sunset Boulevard', year: 1950 },\n    {\n        title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n        year: 1964,\n    },\n    { title: 'The Great Dictator', year: 1940 },\n    { title: 'Cinema Paradiso', year: 1988 },\n    { title: 'The Lives of Others', year: 2006 },\n    { title: 'Grave of the Fireflies', year: 1988 },\n    { title: 'Paths of Glory', year: 1957 },\n    { title: 'Django Unchained', year: 2012 },\n    { title: 'The Shining', year: 1980 },\n    { title: 'WALL·E', year: 2008 },\n    { title: 'American Beauty', year: 1999 },\n    { title: 'The Dark Knight Rises', year: 2012 },\n    { title: 'Princess Mononoke', year: 1997 },\n    { title: 'Aliens', year: 1986 },\n    { title: 'Oldboy', year: 2003 },\n    { title: 'Once Upon a Time in America', year: 1984 },\n    { title: 'Witness for the Prosecution', year: 1957 },\n    { title: 'Das Boot', year: 1981 },\n    { title: 'Citizen Kane', year: 1941 },\n    { title: 'North by Northwest', year: 1959 },\n    { title: 'Vertigo', year: 1958 },\n    {\n        title: 'Star Wars: Episode VI - Return of the Jedi',\n        year: 1983,\n    },\n    { title: 'Reservoir Dogs', year: 1992 },\n    { title: 'Braveheart', year: 1995 },\n    { title: 'M', year: 1931 },\n    { title: 'Requiem for a Dream', year: 2000 },\n    { title: 'Amélie', year: 2001 },\n    { title: 'A Clockwork Orange', year: 1971 },\n    { title: 'Like Stars on Earth', year: 2007 },\n    { title: 'Taxi Driver', year: 1976 },\n    { title: 'Lawrence of Arabia', year: 1962 },\n    { title: 'Double Indemnity', year: 1944 },\n    {\n        title: 'Eternal Sunshine of the Spotless Mind',\n        year: 2004,\n    },\n    { title: 'Amadeus', year: 1984 },\n    { title: 'To Kill a Mockingbird', year: 1962 },\n    { title: 'Toy Story 3', year: 2010 },\n    { title: 'Logan', year: 2017 },\n    { title: 'Full Metal Jacket', year: 1987 },\n    { title: 'Dangal', year: 2016 },\n    { title: 'The Sting', year: 1973 },\n    { title: '2001: A Space Odyssey', year: 1968 },\n    { title: \"Singin' in the Rain\", year: 1952 },\n    { title: 'Toy Story', year: 1995 },\n    { title: 'Bicycle Thieves', year: 1948 },\n    { title: 'The Kid', year: 1921 },\n    { title: 'Inglourious Basterds', year: 2009 },\n    { title: 'Snatch', year: 2000 },\n    { title: '3 Idiots', year: 2009 },\n    { title: 'Monty Python and the Holy Grail', year: 1975 },\n];"]},"metadata":{},"sourceType":"module"}