{"ast":null,"code":"var _jsxFileName = \"/root/capstone_project/client/src/Components/Popover.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/material/styles';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Link from '@mui/material/Link';\nimport Box from '@mui/material/Box';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BootstrapDialog = styled(Dialog)(({\n  theme\n}) => ({\n  '& .MuiDialogContent-root': {\n    padding: theme.spacing(2)\n  },\n  '& .MuiDialogActions-root': {\n    padding: theme.spacing(1)\n  }\n}));\n\nconst BootstrapDialogTitle = props => {\n  const {\n    children,\n    onClose,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(DialogTitle, {\n    sx: {\n      m: 0,\n      p: 2\n    },\n    ...other,\n    children: [children, onClose ? /*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-label\": \"close\",\n      onClick: onClose,\n      sx: {\n        position: 'absolute',\n        right: 8,\n        top: 8,\n        color: theme => theme.palette.grey[500]\n      },\n      children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_c = BootstrapDialogTitle;\nBootstrapDialogTitle.propTypes = {\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired\n};\nexport default function PopOver({\n  company,\n  open,\n  handleClose\n}) {\n  _s();\n\n  const preventDefault = event => event.preventDefault();\n\n  const [title, setTitle] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const getTitles = async company => {\n    fetch(\"http://localhost:5000/by_company/\" + company).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw response;\n    }).then(data => {\n      setTitle(data);\n      console.log(title);\n    }).catch(error => {\n      console.error(\"Error fetching data: \", error);\n      setError(error);\n    }).finally(() => {\n      setLoading(false);\n    });\n  }; //console.log(title)\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(BootstrapDialog, {\n      onClose: handleClose,\n      \"aria-labelledby\": \"customized-dialog-title\",\n      open: open,\n      onLoad: getTitles(company),\n      children: [/*#__PURE__*/_jsxDEV(BootstrapDialogTitle, {\n        className: \"text-center\",\n        onClose: handleClose,\n        children: company\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        dividers: true,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'center',\n            typography: 'body1',\n            '& > :not(style) + :not(style)': {\n              ml: 2\n            }\n          },\n          onClick: preventDefault\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PopOver, \"wGw3KDXq9Yn8EZyOAmNL7gKh+GY=\");\n\n_c2 = PopOver;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BootstrapDialogTitle\");\n$RefreshReg$(_c2, \"PopOver\");","map":{"version":3,"sources":["/root/capstone_project/client/src/Components/Popover.js"],"names":["React","useEffect","useState","Fragment","PropTypes","styled","Dialog","DialogTitle","DialogContent","IconButton","CloseIcon","Link","Box","BootstrapDialog","theme","padding","spacing","BootstrapDialogTitle","props","children","onClose","other","m","p","position","right","top","color","palette","grey","propTypes","node","func","isRequired","PopOver","company","open","handleClose","preventDefault","event","title","setTitle","loading","setLoading","error","setError","getTitles","fetch","then","response","ok","json","data","console","log","catch","finally","display","flexWrap","justifyContent","typography","ml"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, Fragment } from \"react\";\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/material/styles';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Link from '@mui/material/Link';\nimport Box from '@mui/material/Box';\n\n\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\n  '& .MuiDialogContent-root': {\n    padding: theme.spacing(2),\n  },\n  '& .MuiDialogActions-root': {\n    padding: theme.spacing(1),\n  },\n}));\n\nconst BootstrapDialogTitle = (props) => {\n  const { children, onClose, ...other } = props;\n\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\n      {children}\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: 'absolute',\n            right: 8,\n            top: 8,\n            color: (theme) => theme.palette.grey[500],\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </DialogTitle>\n  );\n};\n\nBootstrapDialogTitle.propTypes = {\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default function PopOver({ company, open, handleClose }) {\n\n  const preventDefault = (event) => event.preventDefault();\n  const [title, setTitle] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  \n\n  const getTitles = async (company) => {\n    fetch(\"http://localhost:5000/by_company/\" + company)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw response;\n      })\n      .then(data => {\n        setTitle(data);\n        console.log(title)\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data: \", error);\n        setError(error);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };  \n  \n\n  \n  \n  //console.log(title)\n  return (\n    <div>\n      <BootstrapDialog\n        onClose={handleClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n        onLoad={getTitles(company)}\n      >\n        <BootstrapDialogTitle className=\"text-center\" onClose={handleClose}>\n          {company}\n        </BootstrapDialogTitle>\n        <DialogContent dividers>\n          <Box\n            sx={{\n              display: 'flex',\n              flexWrap: 'wrap',\n              justifyContent: 'center',\n              typography: 'body1',\n              '& > :not(style) + :not(style)': {\n                ml: 2,\n              },\n            }}\n            onClick={preventDefault}\n          >\n            {/* {title['positions_list'].map(value =>(\n              <Link href=\"#\" underline=\"hover\">\n                {value}\n              </Link>\n            ))}\n             */}\n\n\n          </Box>\n\n        </DialogContent>\n        <DialogContent>\n\n        </DialogContent>\n      </BootstrapDialog>\n    </div>\n  );\n}\n\n\n"]},"metadata":{},"sourceType":"module"}