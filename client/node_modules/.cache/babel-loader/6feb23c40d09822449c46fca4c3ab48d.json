{"ast":null,"code":"var _jsxFileName = \"/root/capstone_project/client/src/Components/ToggleCompanies.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport PopoverCompanies from \"./PopoverCompanies\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ToggleCompanies = ({\n  setDicCompany\n}) => {\n  _s();\n\n  const [companies, setCompanies] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [button, setButton] = useState(\"\"); // const handleClickOpen = () => {\n  //   setOpen(true);\n  // };\n\n  const handleClickButton = async e => {\n    await getInfo(e.target.value);\n  }; // const handleClose = () => {\n  //   setOpen(false);\n  // };\n\n\n  useEffect(() => {\n    fetch(\"http://localhost:5000/by_company\").then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw response;\n    }).then(data => {\n      setCompanies(data);\n    }).catch(error => {\n      console.error(\"Error fetching data: \", error);\n      setError(error);\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, []);\n\n  const getInfo = async comp => {\n    try {\n      const response = await fetch(\"http://localhost:5000/by_company/\" + comp);\n      const jsonData = await response.json();\n      setDicCompany(jsonData);\n      return jsonData;\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  if (loading) return \"Loading...\";\n  if (error) return \"Error!\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"btn-toolbar justify-content-center\",\n    role: \"toolbar\",\n    \"aria-label\": \"Toolbar with button groups\",\n    children: [companies && companies.companies_list ? companies.companies_list.slice(0, 5).map(value => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-secondary mr-2\",\n      type: \"button\",\n      onClick: handleClickButton,\n      value: value,\n      style: {\n        width: 150\n      },\n      children: value\n    }, value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }, this)) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary\",\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#exampleModalCenter\",\n      children: /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PopoverCompanies, {\n      companies: companies,\n      handleClickButton: handleClickButton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ToggleCompanies, \"VdDxKisBaSa0KAKX4eAcXHF3Jos=\");\n\n_c = ToggleCompanies;\nexport default ToggleCompanies;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToggleCompanies\");","map":{"version":3,"sources":["/root/capstone_project/client/src/Components/ToggleCompanies.js"],"names":["React","useEffect","useState","PopoverCompanies","ToggleCompanies","setDicCompany","companies","setCompanies","loading","setLoading","error","setError","open","setOpen","button","setButton","handleClickButton","e","getInfo","target","value","fetch","then","response","ok","json","data","catch","console","finally","comp","jsonData","err","message","companies_list","slice","map","width"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PopoverCompanies from \"./PopoverCompanies\";\n\n\n\nconst ToggleCompanies = ({ setDicCompany }) => {\n\n  const [companies, setCompanies] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [button, setButton] = useState(\"\")\n\n\n  // const handleClickOpen = () => {\n  //   setOpen(true);\n  // };\n\n  const handleClickButton = async (e) => {\n    await getInfo(e.target.value)\n  };\n\n  // const handleClose = () => {\n  //   setOpen(false);\n  // };\n\n  useEffect(() => {\n    fetch(\"http://localhost:5000/by_company\")\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw response;\n      })\n      .then(data => {\n        setCompanies(data);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data: \", error);\n        setError(error);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  const getInfo = async (comp) => {\n    try {\n      const response = await fetch(\"http://localhost:5000/by_company/\" + comp);\n      const jsonData = await response.json();\n      setDicCompany(jsonData)\n      return jsonData;\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  if (loading) return \"Loading...\";\n  if (error) return \"Error!\";\n\n  return (\n\n    <div className=\"btn-toolbar justify-content-center\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\n      {companies && companies.companies_list ?\n        companies.companies_list.slice(0, 5).map(value => (\n          <button \n            className=\"btn btn-secondary mr-2\"\n            type=\"button\"\n            onClick={handleClickButton}\n            value={value}\n            key={value}\n            style={{width: 150}}>\n              {value}\n          </button>\n        )): null\n      }\n      <button\n        type=\"button\"\n        className=\"btn btn-secondary\"\n        data-toggle=\"modal\"\n        data-target=\"#exampleModalCenter\"\n        >\n          <h6>+</h6>\n      </button>\n      <PopoverCompanies companies={companies} handleClickButton={handleClickButton}/>\n    </div>\n  );\n};\n\nexport default ToggleCompanies;\n"]},"metadata":{},"sourceType":"module"}