{"ast":null,"code":"var _jsxFileName = \"/root/capstone_project/client/src/Components/BarByCompany.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BarByCompany = ({\n  dicCompany,\n  position\n}) => {\n  _s();\n\n  console.log;\n  const [dict, setDict] = useState([]);\n\n  const getDict = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/by_company/${dicCompany !== null && dicCompany.company_name ? dicCompany.company_name : \"\"}/Software Engineer`);\n      const jsonData = await response.json();\n      setDict(jsonData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const level_list = [];\n\n  for (const key in dict.salary_by_level) {\n    level_list.push(dict.salary_by_level[key]);\n  }\n\n  useEffect(() => {\n    getDict();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      data: {\n        labels: ['L0', 'L1', 'L2', 'L3', 'L4', 'L5'],\n        datasets: [{\n          label: 'SALARY VS LEVEL',\n          data: level_list,\n          backgroundColor: ['rgba(255, 99, 132, 0.5)', 'rgba(54, 162, 235, 0.5)', 'rgba(255, 206, 86, 0.5)', 'rgba(75, 192, 192, 0.5)', 'rgba(153, 102, 255, 0.5)', 'rgba(255, 159, 64, 0.5)'],\n          borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n          borderWidth: 0.5\n        }]\n      },\n      height: 400,\n      width: 600,\n      options: {\n        maintainAspectRatio: false,\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: true\n            }\n          }]\n        },\n        plugins: {\n          legend: {\n            labels: {\n              font: {\n                size: 14\n              }\n            }\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BarByCompany, \"yY/s0kyOI2hAnRh+9tXaKenn+oQ=\");\n\n_c = BarByCompany;\nexport default BarByCompany;\n\nvar _c;\n\n$RefreshReg$(_c, \"BarByCompany\");","map":{"version":3,"sources":["/root/capstone_project/client/src/Components/BarByCompany.js"],"names":["React","useEffect","useState","Bar","BarByCompany","dicCompany","position","console","log","dict","setDict","getDict","response","fetch","company_name","jsonData","json","err","error","message","level_list","key","salary_by_level","push","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","plugins","legend","font","size"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,GAAT,QAAoB,iBAApB;;;AAEA,MAAMC,YAAY,GAAG,CAAE;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAF,KAAgC;AAAA;;AAEnDC,EAAAA,OAAO,CAACC,GAAR;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;;AACA,QAAMS,OAAO,GAAG,YAAY;AAC1B,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,oCAAmCR,UAAU,KAAK,IAAf,IAAuBA,UAAU,CAACS,YAAlC,GAAiDT,UAAU,CAACS,YAA5D,GAA2E,EAAG,oBAAnH,CAA5B;AACA,YAAMC,QAAQ,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAvB;AACAN,MAAAA,OAAO,CAACK,QAAD,CAAP;AACD,KAJD,CAIE,OAAOE,GAAP,EAAY;AACZV,MAAAA,OAAO,CAACW,KAAR,CAAcD,GAAG,CAACE,OAAlB;AACD;AACF,GARD;;AAUA,QAAMC,UAAU,GAAG,EAAnB;;AACA,OAAK,MAAMC,GAAX,IAAkBZ,IAAI,CAACa,eAAvB,EAAwC;AACtCF,IAAAA,UAAU,CAACG,IAAX,CAAgBd,IAAI,CAACa,eAAL,CAAqBD,GAArB,CAAhB;AACD;;AAEDpB,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA,2BACE,QAAC,GAAD;AACE,MAAA,IAAI,EAAE;AACJa,QAAAA,MAAM,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,CADJ;AAEJC,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,KAAK,EAAE,iBADT;AAEEC,UAAAA,IAAI,EAAEP,UAFR;AAGEQ,UAAAA,eAAe,EAAE,CACf,yBADe,EAEf,yBAFe,EAGf,yBAHe,EAIf,yBAJe,EAKf,0BALe,EAMf,yBANe,CAHnB;AAWEC,UAAAA,WAAW,EAAE,CACX,uBADW,EAEX,uBAFW,EAGX,uBAHW,EAIX,uBAJW,EAKX,wBALW,EAMX,uBANW,CAXf;AAmBEC,UAAAA,WAAW,EAAE;AAnBf,SADQ;AAFN,OADR;AA2BE,MAAA,MAAM,EAAE,GA3BV;AA4BE,MAAA,KAAK,EAAE,GA5BT;AA6BE,MAAA,OAAO,EAAE;AACPC,QAAAA,mBAAmB,EAAE,KADd;AAEPC,QAAAA,MAAM,EAAE;AACNC,UAAAA,KAAK,EAAE,CACL;AACEC,YAAAA,KAAK,EAAE;AACLC,cAAAA,WAAW,EAAE;AADR;AADT,WADK;AADD,SAFD;AAWPC,QAAAA,OAAO,EAAE;AACPC,UAAAA,MAAM,EAAE;AACNb,YAAAA,MAAM,EAAE;AACNc,cAAAA,IAAI,EAAE;AACJC,gBAAAA,IAAI,EAAE;AADF;AADA;AADF;AADD;AAXF;AA7BX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuDD,CA9ED;;GAAMnC,Y;;KAAAA,Y;AAgFN,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Bar } from 'react-chartjs-2';\n\nconst BarByCompany = ( { dicCompany, position } ) => {\n\n  console.log\n  const [dict, setDict] = useState([]);\n  const getDict = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/by_company/${dicCompany !== null && dicCompany.company_name ? dicCompany.company_name : \"\"}/Software Engineer`);\n      const jsonData = await response.json();\n      setDict(jsonData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const level_list = [];\n  for (const key in dict.salary_by_level) {\n    level_list.push(dict.salary_by_level[key]);\n  }\n\n  useEffect(() => {\n    getDict();\n  }, []);\n\n  return (\n    <div>\n      <Bar\n        data={{\n          labels: ['L0', 'L1', 'L2', 'L3', 'L4', 'L5'],\n          datasets: [\n            {\n              label: 'SALARY VS LEVEL',\n              data: level_list,\n              backgroundColor: [\n                'rgba(255, 99, 132, 0.5)',\n                'rgba(54, 162, 235, 0.5)',\n                'rgba(255, 206, 86, 0.5)',\n                'rgba(75, 192, 192, 0.5)',\n                'rgba(153, 102, 255, 0.5)',\n                'rgba(255, 159, 64, 0.5)'\n              ],\n              borderColor: [\n                'rgba(255, 99, 132, 1)',\n                'rgba(54, 162, 235, 1)',\n                'rgba(255, 206, 86, 1)',\n                'rgba(75, 192, 192, 1)',\n                'rgba(153, 102, 255, 1)',\n                'rgba(255, 159, 64, 1)'\n              ],\n              borderWidth: 0.5,\n            },\n          ],\n        }}\n        height={400}\n        width={600}\n        options={{\n          maintainAspectRatio: false,\n          scales: {\n            yAxes: [\n              {\n                ticks: {\n                  beginAtZero: true,\n                }\n              }\n            ]\n          },\n          plugins: {\n            legend: {\n              labels: {\n                font: {\n                  size: 14\n                }\n              }\n            }\n          }\n        }}\n      />\n    </div>\n  )\n}\n\nexport default BarByCompany;\n"]},"metadata":{},"sourceType":"module"}