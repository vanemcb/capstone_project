{"ast":null,"code":"var _jsxFileName = \"/root/capstone_project/client/src/Components/ListCompanies.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport { experimentalStyled as styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Item = styled(Paper)(({\n  theme\n}) => ({ ...theme.typography.body2,\n  padding: theme.spacing(2),\n  textAlign: 'center',\n  color: theme.palette.text.secondary\n}));\n\nconst ListCompanies = () => {\n  _s();\n\n  const setValue = event => setCompany(event.target.id);\n\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [company, setCompany] = useState(\"\");\n  useEffect(() => {\n    fetch(\"http://localhost:5000/by_company\").then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw response;\n    }).then(data => {\n      setData(data);\n    }).catch(error => {\n      console.error(\"Error fetching data: \", error);\n      setError(error);\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, []);\n  if (loading) return \"Loading...\";\n  if (error) return \"Error!\";\n  console.log(company);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      style: {\n        width: 700,\n        margin: \"auto\"\n      },\n      className: \"mt-5\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: {\n          xs: 2,\n          md: 3\n        },\n        columns: {\n          xs: 4,\n          sm: 8,\n          md: 16\n        },\n        children: data.map(value => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 2,\n          sm: 4,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Item, {\n            type: \"button\",\n            onClick: e => {\n              setValue(e);\n            },\n            id: value,\n            children: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)\n        }, value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ListCompanies, \"ZpQcpjhis1oioolntQkvkRU9ZhI=\");\n\n_c = ListCompanies;\nexport default ListCompanies;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListCompanies\");","map":{"version":3,"sources":["/root/capstone_project/client/src/Components/ListCompanies.js"],"names":["React","useEffect","useState","Fragment","experimentalStyled","styled","Box","Paper","Grid","Item","theme","typography","body2","padding","spacing","textAlign","color","palette","text","secondary","ListCompanies","setValue","event","setCompany","target","id","data","setData","loading","setLoading","error","setError","company","fetch","then","response","ok","json","catch","console","finally","log","width","margin","xs","md","sm","map","value","e"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, Fragment } from \"react\";\nimport { experimentalStyled as styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\n\n\n\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body2,\n  padding: theme.spacing(2),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nconst ListCompanies= () => {\n\n  const setValue = (event) => setCompany(event.target.id)\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [company, setCompany] = useState(\"\");\n\n  useEffect(() => {\n    fetch(\"http://localhost:5000/by_company\")\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw response;\n      })\n      .then(data => {\n        setData(data);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data: \", error);\n        setError(error);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n  if (loading) return \"Loading...\";\n  if (error) return \"Error!\";\n\n  console.log(company);\n\n  return (\n    <Fragment>\n      <Box style={{ width: 700, margin: \"auto\" }} className=\"mt-5\">\n        <Grid container spacing={{ xs: 2, md: 3 }} columns={{ xs: 4, sm: 8, md: 16 }}>\n          {data.map(value => (\n            <Grid item xs={2} sm={4} md={4} key={value}>\n              <Item\n                type=\"button\"\n                onClick={(e) => {setValue(e)}}\n                id={value}\n                >{value}\n              </Item>\n            </Grid>\n          ))}\n        </Grid>\n      </Box>\n\n    </Fragment>\n  );\n};\n\nexport default ListCompanies;"]},"metadata":{},"sourceType":"module"}