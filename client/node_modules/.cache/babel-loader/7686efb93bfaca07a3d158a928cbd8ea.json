{"ast":null,"code":"var _jsxFileName = \"/root/capstone_project/client/src/Components/ListLevels.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListLevels = () => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetch(\"http://localhost:5000\").then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw response;\n    }).then(data => {\n      setData(data);\n    }).catch(error => {\n      console.error(\"Error fetching data: \", error);\n      setError(error);\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, []);\n  if (loading) return \"Loading...\";\n  if (error) return \"Error!\";\n  const companies = Object.keys(data);\n  const company = \"PANDEV\";\n  const index = companies.indexOf(company);\n  console.log(index); //const ran = companies[Math.floor(Math.random() * companies.length)];\n\n  const list_levels = [];\n\n  for (const key in data) {\n    const l = {\n      \"L0\": \"No data\",\n      \"L1\": \"No data\",\n      \"L2\": \"No data\",\n      \"L3\": \"No data\",\n      \"L4\": \"No data\",\n      \"L5\": \"No data\"\n    };\n\n    for (const key2 in l) {\n      if (key2 in data[key]) {\n        l[key2] = data[key][key2];\n      }\n    }\n\n    list_levels.push(l);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"btn-group-vertical btn-group-lg\",\n      role: \"group\",\n      children: Object.keys(list_levels[index]).map(key => /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        class: \"btn btn-info\",\n        children: list_levels[index][key]\n      }, list_levels[index][key], false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ListLevels, \"RiL7vLwmC7ZWXKL/bXt2EIBjBYk=\");\n\n_c = ListLevels;\nexport default ListLevels;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListLevels\");","map":{"version":3,"sources":["/root/capstone_project/client/src/Components/ListLevels.js"],"names":["React","useEffect","useState","Fragment","ListLevels","data","setData","loading","setLoading","error","setError","fetch","then","response","ok","json","catch","console","finally","companies","Object","keys","company","index","indexOf","log","list_levels","key","l","key2","push","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,QAArC,QAAqD,OAArD;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAEvB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,KAAK,CAAC,uBAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACC,EAAb,EAAiB;AACf,eAAOD,QAAQ,CAACE,IAAT,EAAP;AACD;;AACD,YAAMF,QAAN;AACD,KANH,EAOGD,IAPH,CAOQP,IAAI,IAAI;AACZC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACD,KATH,EAUGW,KAVH,CAUUP,KAAD,IAAW;AAChBQ,MAAAA,OAAO,CAACR,KAAR,CAAc,uBAAd,EAAuCA,KAAvC;AACAC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAbH,EAcGS,OAdH,CAcW,MAAM;AACbV,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAhBH;AAiBD,GAlBQ,EAkBN,EAlBM,CAAT;AAmBA,MAAID,OAAJ,EAAa,OAAO,YAAP;AACb,MAAIE,KAAJ,EAAW,OAAO,QAAP;AAEX,QAAMU,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYhB,IAAZ,CAAlB;AACA,QAAMiB,OAAO,GAAG,QAAhB;AACA,QAAMC,KAAK,GAAGJ,SAAS,CAACK,OAAV,CAAkBF,OAAlB,CAAd;AACAL,EAAAA,OAAO,CAACQ,GAAR,CAAYF,KAAZ,EA/BuB,CAgCvB;;AAEA,QAAMG,WAAW,GAAG,EAApB;;AAGA,OAAK,MAAMC,GAAX,IAAkBtB,IAAlB,EAAwB;AACtB,UAAMuB,CAAC,GAAG;AAAE,YAAM,SAAR;AAAmB,YAAM,SAAzB;AAAoC,YAAM,SAA1C;AAAqD,YAAM,SAA3D;AAAsE,YAAM,SAA5E;AAAuF,YAAM;AAA7F,KAAV;;AACA,SAAK,MAAMC,IAAX,IAAmBD,CAAnB,EAAsB;AACpB,UAAIC,IAAI,IAAIxB,IAAI,CAACsB,GAAD,CAAhB,EAAuB;AACrBC,QAAAA,CAAC,CAACC,IAAD,CAAD,GAAUxB,IAAI,CAACsB,GAAD,CAAJ,CAAUE,IAAV,CAAV;AACD;AACF;;AACDH,IAAAA,WAAW,CAACI,IAAZ,CAAiBF,CAAjB;AACD;;AAED,sBACE,QAAC,QAAD;AAAA,2BACE;AAAK,MAAA,KAAK,EAAC,iCAAX;AAA6C,MAAA,IAAI,EAAC,OAAlD;AAAA,gBACGR,MAAM,CAACC,IAAP,CAAYK,WAAW,CAACH,KAAD,CAAvB,EAAgCQ,GAAhC,CAAoCJ,GAAG,iBAEtC;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAC,cAA5B;AAAA,kBACGD,WAAW,CAACH,KAAD,CAAX,CAAmBI,GAAnB;AADH,SAAgDD,WAAW,CAACH,KAAD,CAAX,CAAmBI,GAAnB,CAAhD;AAAA;AAAA;AAAA;AAAA,cAFD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CApED;;GAAMvB,U;;KAAAA,U;AAsEN,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState, Fragment } from \"react\";\n\nconst ListLevels = () => {\n\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetch(\"http://localhost:5000\")\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw response;\n      })\n      .then(data => {\n        setData(data);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data: \", error);\n        setError(error);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n  if (loading) return \"Loading...\";\n  if (error) return \"Error!\";\n\n  const companies = Object.keys(data);\n  const company = \"PANDEV\"  \n  const index = companies.indexOf(company);\n  console.log(index);\n  //const ran = companies[Math.floor(Math.random() * companies.length)];\n\n  const list_levels = [];\n  \n  \n  for (const key in data) {\n    const l = { \"L0\": \"No data\", \"L1\": \"No data\", \"L2\": \"No data\", \"L3\": \"No data\", \"L4\": \"No data\", \"L5\": \"No data\"};\n    for (const key2 in l) {\n      if (key2 in data[key]) {\n        l[key2] = data[key][key2];\n      }\n    }\n    list_levels.push(l)\n  }\n\n  return (\n    <Fragment>\n      <div class=\"btn-group-vertical btn-group-lg\" role=\"group\">\n        {Object.keys(list_levels[index]).map(key => (\n          \n          <button type=\"button\" class=\"btn btn-info\" key={list_levels[index][key]}>\n            {list_levels[index][key]}\n          </button>\n          \n        ))}\n\n\n        \n      </div>\n\n\n\n\n    </Fragment>\n\n  );\n};\n\nexport default ListLevels;"]},"metadata":{},"sourceType":"module"}