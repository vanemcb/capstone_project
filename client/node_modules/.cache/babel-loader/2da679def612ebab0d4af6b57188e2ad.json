{"ast":null,"code":"var _jsxFileName = \"/root/capstone_project/client/src/Components/ListLevels.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport Divider from '@mui/material/Divider';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Avatar from '@mui/material/Avatar';\nimport AttachMoneyIcon from '@mui/icons-material/AttachMoney';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListLevels = ({\n  nameCompany\n}) => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetch(\"http://localhost:5000\").then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw response;\n    }).then(data => {\n      setData(data);\n    }).catch(error => {\n      console.error(\"Error fetching data: \", error);\n      setError(error);\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, []);\n  if (loading) return \"Loading...\";\n  if (error) return \"Error!\";\n  const companies = Object.keys(data);\n  const company = nameCompany;\n  const index = companies.indexOf(company);\n  console.log(index);\n  const ran = Math.floor(Math.random() * 1000);\n  const list_levels = [];\n\n  for (const key in data) {\n    const l = {\n      \"L0\": \"No data\",\n      \"L1\": \"No data\",\n      \"L2\": \"No data\",\n      \"L3\": \"No data\",\n      \"L4\": \"No data\",\n      \"L5\": \"No data\"\n    };\n\n    for (const key2 in l) {\n      if (key2 in data[key]) {\n        l[key2] = data[key][key2];\n      }\n    }\n\n    list_levels.push(l);\n  }\n\n  return /*#__PURE__*/_jsxDEV(List, {\n    sx: {\n      width: '100%',\n      maxWidth: 360\n    },\n    children: [/*#__PURE__*/_jsxDEV(ListItem, {\n      sx: {\n        bgcolor: \"#E4D8DC\"\n      },\n      children: /*#__PURE__*/_jsxDEV(ListItemText, {\n        primary: company,\n        className: \"text-center\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), Object.keys(list_levels[index]).map(key => /*#__PURE__*/_jsxDEV(ListItem, {\n      button: true,\n      children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n        className: \"ml-5\",\n        children: /*#__PURE__*/_jsxDEV(AttachMoneyIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n        primary: list_levels[index][key]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 7\n  }, this);\n};\n\n_s(ListLevels, \"RiL7vLwmC7ZWXKL/bXt2EIBjBYk=\");\n\n_c = ListLevels;\nexport default ListLevels;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListLevels\");","map":{"version":3,"sources":["/root/capstone_project/client/src/Components/ListLevels.js"],"names":["React","useEffect","useState","Fragment","List","ListItem","ListItemText","Divider","ListItemAvatar","Avatar","AttachMoneyIcon","ListLevels","nameCompany","data","setData","loading","setLoading","error","setError","fetch","then","response","ok","json","catch","console","finally","companies","Object","keys","company","index","indexOf","log","ran","Math","floor","random","list_levels","key","l","key2","push","width","maxWidth","bgcolor","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, Fragment } from \"react\";\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport Divider from '@mui/material/Divider';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Avatar from '@mui/material/Avatar';\nimport AttachMoneyIcon from '@mui/icons-material/AttachMoney';\n\nconst ListLevels = ({nameCompany}) => {\n\n    const [data, setData] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        fetch(\"http://localhost:5000\")\n            .then((response) => {\n                if (response.ok) {\n                    return response.json();\n                }\n                throw response;\n            })\n            .then(data => {\n                setData(data);\n            })\n            .catch((error) => {\n                console.error(\"Error fetching data: \", error);\n                setError(error);\n            })\n            .finally(() => {\n                setLoading(false);\n            });\n    }, []);\n    if (loading) return \"Loading...\";\n    if (error) return \"Error!\";\n\n    const companies = Object.keys(data);\n    const company = nameCompany;\n    const index = companies.indexOf(company);\n    console.log(index);\n    const ran = Math.floor(Math.random() * 1000);\n\n    const list_levels = [];\n\n\n    for (const key in data) {\n        const l = { \"L0\": \"No data\", \"L1\": \"No data\", \"L2\": \"No data\", \"L3\": \"No data\", \"L4\": \"No data\", \"L5\": \"No data\" };\n        for (const key2 in l) {\n            if (key2 in data[key]) {\n                l[key2] = data[key][key2];\n            }\n        }\n        list_levels.push(l)\n    }\n\n    return (\n      <List\n        sx={{\n          width: '100%',\n          maxWidth: 360\n        }}\n      >\n        <ListItem sx={{ bgcolor: \"#E4D8DC\" }}>\n          <ListItemText primary={company} className=\"text-center\" />\n        </ListItem>\n        <Divider />\n        {Object.keys(list_levels[index]).map(key => (\n          <ListItem button>\n            <ListItemAvatar className=\"ml-5\">\n                <AttachMoneyIcon />              \n            </ListItemAvatar>\n            <ListItemText primary={list_levels[index][key]} />\n          </ListItem>\n        ))}\n      </List>\n\n\n\n\n\n    );\n};\n\nexport default ListLevels;"]},"metadata":{},"sourceType":"module"}