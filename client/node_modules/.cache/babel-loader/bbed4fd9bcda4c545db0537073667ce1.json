{"ast":null,"code":"var _jsxFileName = \"/root/capstone_project/client/src/Components/ToggleCompanies.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport { styled } from '@mui/material/styles';\nimport PopoverCompanies from \"./PopoverCompanies\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Item = styled(Paper)(({\n  theme\n}) => ({ ...theme.typography.body2,\n  padding: theme.spacing(2),\n  textAlign: 'center',\n  color: theme.palette.text.secondary\n}));\n\nconst ToggleCompanies = () => {\n  _s();\n\n  const [companies, setCompanies] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [button, setButton] = useState(\"\");\n\n  const handleClickOpen = e => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    fetch(\"http://localhost:5000/by_company\").then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw response;\n    }).then(data => {\n      setCompanies(data);\n    }).catch(error => {\n      console.error(\"Error fetching data: \", error);\n      setError(error);\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, []);\n  if (loading) return \"Loading...\";\n  if (error) return \"Error!\";\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      style: {\n        width: 650,\n        margin: \"auto\"\n      },\n      className: \"mt-5\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: {\n          xs: 2,\n          md: 3\n        },\n        columns: {\n          xs: 4,\n          sm: 8,\n          md: 16\n        },\n        children: [companies.slice(0, 5).map(value => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 2,\n          sm: 4,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Item, {\n            type: \"button\",\n            id: value,\n            children: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)\n        }, value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 2,\n          sm: 4,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Item, {\n            type: \"button\",\n            id: \"more\",\n            onClick: handleClickOpen,\n            children: \"MORE +\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, \"more\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PopoverCompanies, {\n      open: open,\n      handleClose: handleClose,\n      companies: companies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ToggleCompanies, \"VdDxKisBaSa0KAKX4eAcXHF3Jos=\");\n\n_c = ToggleCompanies;\nexport default ToggleCompanies;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToggleCompanies\");","map":{"version":3,"sources":["/root/capstone_project/client/src/Components/ToggleCompanies.js"],"names":["React","useEffect","useState","Fragment","Box","Paper","Grid","styled","PopoverCompanies","Item","theme","typography","body2","padding","spacing","textAlign","color","palette","text","secondary","ToggleCompanies","companies","setCompanies","loading","setLoading","error","setError","open","setOpen","button","setButton","handleClickOpen","e","handleClose","fetch","then","response","ok","json","data","catch","console","finally","width","margin","xs","md","sm","slice","map","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, Fragment } from \"react\";\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport { styled } from '@mui/material/styles';\nimport PopoverCompanies from \"./PopoverCompanies\";\n\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body2,\n  padding: theme.spacing(2),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nconst ToggleCompanies = () => {\n\n  const [companies, setCompanies] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [button, setButton] = useState(\"\");\n\n  const handleClickOpen = (e) => {\n     setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    fetch(\"http://localhost:5000/by_company\")\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw response;\n      })\n      .then(data => {\n        setCompanies(data);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data: \", error);\n        setError(error);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  if (loading) return \"Loading...\";\n  if (error) return \"Error!\";\n\n  return (\n    <Fragment>\n      <Box style={{ width: 650, margin: \"auto\" }} className=\"mt-5\">\n        <Grid container spacing={{ xs: 2, md: 3 }} columns={{ xs: 4, sm: 8, md: 16 }}>\n          {companies.slice(0, 5).map(value => (\n            <Grid item xs={2} sm={4} md={4} key={value}>\n              <Item\n                type=\"button\"\n                id={value}\n              >{value}\n              </Item>\n            </Grid>\n          ))}\n          <Grid item xs={2} sm={4} md={4} key=\"more\">\n            <Item\n              type=\"button\"\n              id=\"more\"\n              onClick={handleClickOpen}\n            >MORE +\n            </Item>\n          </Grid>\n        </Grid>\n      </Box>\n\n\n      <PopoverCompanies open={open} handleClose={handleClose} companies={companies} />\n\n    </Fragment>\n  );\n};\n\nexport default ToggleCompanies;"]},"metadata":{},"sourceType":"module"}