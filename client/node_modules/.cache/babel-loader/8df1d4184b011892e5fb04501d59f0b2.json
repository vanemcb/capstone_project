{"ast":null,"code":"var _jsxFileName = \"/root/capstone_project/client/src/Components/ToggleCompanies.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport PopoverCompanies from \"./PopoverCompanies\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ToggleCompanies = ({\n  setDicCompany,\n  setPosition\n}) => {\n  _s();\n\n  const [companies, setCompanies] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const handleClickButton = async e => {\n    setPosition(\"\");\n    await getInfo(e.target.value);\n  };\n\n  useEffect(() => {\n    fetch(\"http://localhost:5000/by_company\").then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw response;\n    }).then(data => {\n      setCompanies(data);\n    }).catch(error => {\n      console.error(\"Error fetching data: \", error);\n      setError(error);\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, []);\n\n  const getInfo = async comp => {\n    try {\n      const response = await fetch(\"http://localhost:5000/by_company/\" + comp);\n      const jsonData = await response.json();\n      setDicCompany(jsonData);\n      return jsonData;\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  if (loading) return \"Loading...\";\n  if (error) return \"Error!\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"btn-toolbar justify-content-center\",\n    role: \"toolbar\",\n    \"aria-label\": \"Toolbar with button groups\",\n    children: [companies && companies.companies_list ? companies.companies_list.slice(0, 5).map(value => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-secondary mr-2\",\n      type: \"button\",\n      onClick: handleClickButton,\n      value: value,\n      style: {\n        width: 150,\n        background: '#A7C3D1',\n        borderColor: 'white'\n      },\n      children: value\n    }, value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }, this)) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary\",\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#exampleModalCenter\",\n      style: {\n        background: '#81A9BD',\n        borderColor: 'white'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PopoverCompanies, {\n      companies: companies,\n      handleClickButton: handleClickButton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ToggleCompanies, \"xYfsNsTaTDrgv33imVtzRrb/I0U=\");\n\n_c = ToggleCompanies;\nexport default ToggleCompanies;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToggleCompanies\");","map":{"version":3,"sources":["/root/capstone_project/client/src/Components/ToggleCompanies.js"],"names":["React","useEffect","useState","PopoverCompanies","ToggleCompanies","setDicCompany","setPosition","companies","setCompanies","loading","setLoading","error","setError","handleClickButton","e","getInfo","target","value","fetch","then","response","ok","json","data","catch","console","finally","comp","jsonData","err","message","companies_list","slice","map","width","background","borderColor"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PopoverCompanies from \"./PopoverCompanies\";\n\nconst ToggleCompanies = ({ setDicCompany, setPosition }) => {\n\n    const [companies, setCompanies] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    const handleClickButton = async (e) => {\n        setPosition(\"\")\n        await getInfo(e.target.value)\n    };\n\n    useEffect(() => {\n        fetch(\"http://localhost:5000/by_company\")\n            .then((response) => {\n                if (response.ok) {\n                    return response.json();\n                }\n                throw response;\n            })\n            .then(data => {\n                setCompanies(data);\n            })\n            .catch((error) => {\n                console.error(\"Error fetching data: \", error);\n                setError(error);\n            })\n            .finally(() => {\n                setLoading(false);\n            });\n    }, []);\n\n    const getInfo = async (comp) => {\n        try {\n            const response = await fetch(\"http://localhost:5000/by_company/\" + comp);\n            const jsonData = await response.json();\n            setDicCompany(jsonData)\n            return jsonData;\n        } catch (err) {\n            console.error(err.message);\n        }\n    };\n\n    if (loading) return \"Loading...\";\n    if (error) return \"Error!\";\n\n    return (\n\n        <div className=\"btn-toolbar justify-content-center\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\n            {companies && companies.companies_list ?\n                companies.companies_list.slice(0, 5).map(value => (\n                    <button\n                        className=\"btn btn-secondary mr-2\"\n                        type=\"button\"\n                        onClick={handleClickButton}\n                        value={value}\n                        key={value}\n                        style={{ width: 150, background: '#A7C3D1', borderColor: 'white' }}>\n                        {value}\n                    </button>\n                )) : null\n            }\n            <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-toggle=\"modal\"\n                data-target=\"#exampleModalCenter\"\n                style={{ background: '#81A9BD', borderColor: 'white' }}\n            >\n                <h6>+</h6>\n            </button>\n            <PopoverCompanies companies={companies} handleClickButton={handleClickButton} />\n        </div>\n    );\n};\n\nexport default ToggleCompanies;\n"]},"metadata":{},"sourceType":"module"}