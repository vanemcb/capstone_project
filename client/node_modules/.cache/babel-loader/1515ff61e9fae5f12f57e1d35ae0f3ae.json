{"ast":null,"code":"var _jsxFileName = \"/root/capstone_project/client/src/Components/DouByCompany.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Doughnut } from 'react-chartjs-2';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DouByCompany = () => {\n  _s();\n\n  const {\n    data\n  } = useLocation();\n  const [dict, setDict] = useState([]);\n\n  const getDict = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/by_company/${data[0]}/${data[1]}`);\n      const jsonData = await response.json();\n      setDict(jsonData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    getDict();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Doughnut, {\n      data: {\n        labels: ['Average Salary', 'Average Bonus'],\n        datasets: [{\n          label: 'AVERAGE',\n          data: [dict.average_salary, dict.average_bonus],\n          backgroundColor: ['rgba(255, 99, 132, 0.5)', 'rgba(54, 162, 235, 0.5)'],\n          borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)'],\n          borderWidth: 0.5\n        }]\n      },\n      height: 400,\n      width: 600,\n      options: {\n        maintainAspectRatio: false,\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: true\n            }\n          }]\n        },\n        plugins: {\n          legend: {\n            labels: {\n              font: {\n                size: 14\n              }\n            }\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DouByCompany, \"3sUEGx7vCPU93UudTNAk9Bzm7Uo=\", false, function () {\n  return [useLocation];\n});\n\n_c = DouByCompany;\nexport default DouByCompany;\n\nvar _c;\n\n$RefreshReg$(_c, \"DouByCompany\");","map":{"version":3,"sources":["/root/capstone_project/client/src/Components/DouByCompany.js"],"names":["React","useEffect","useState","Doughnut","useLocation","DouByCompany","data","dict","setDict","getDict","response","fetch","jsonData","json","err","console","error","message","labels","datasets","label","average_salary","average_bonus","backgroundColor","borderColor","borderWidth","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","plugins","legend","font","size"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAM;AAAEC,IAAAA;AAAF,MAAWF,WAAW,EAA5B;AAEA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;;AACA,QAAMO,OAAO,GAAG,YAAY;AAC1B,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,oCAAmCL,IAAI,CAAC,CAAD,CAAI,IAAGA,IAAI,CAAC,CAAD,CAAI,EAAxD,CAA5B;AACA,YAAMM,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAvB;AACAL,MAAAA,OAAO,CAACI,QAAD,CAAP;AACD,KAJD,CAIE,OAAOE,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACG,OAAlB;AACD;AACF,GARD;;AAUAhB,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA,2BACE,QAAC,QAAD;AACE,MAAA,IAAI,EAAE;AACJS,QAAAA,MAAM,EAAE,CAAC,gBAAD,EAAmB,eAAnB,CADJ;AAEJC,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,KAAK,EAAE,SADT;AAEEd,UAAAA,IAAI,EAAE,CAAEC,IAAI,CAACc,cAAP,EAAuBd,IAAI,CAACe,aAA5B,CAFR;AAGEC,UAAAA,eAAe,EAAE,CACf,yBADe,EAEf,yBAFe,CAHnB;AAOEC,UAAAA,WAAW,EAAE,CACX,uBADW,EAEX,uBAFW,CAPf;AAWEC,UAAAA,WAAW,EAAE;AAXf,SADQ;AAFN,OADR;AAmBE,MAAA,MAAM,EAAE,GAnBV;AAoBE,MAAA,KAAK,EAAE,GApBT;AAqBE,MAAA,OAAO,EAAE;AACPC,QAAAA,mBAAmB,EAAE,KADd;AAEPC,QAAAA,MAAM,EAAE;AACNC,UAAAA,KAAK,EAAE,CACL;AACEC,YAAAA,KAAK,EAAE;AACLC,cAAAA,WAAW,EAAE;AADR;AADT,WADK;AADD,SAFD;AAWPC,QAAAA,OAAO,EAAE;AACPC,UAAAA,MAAM,EAAE;AACNd,YAAAA,MAAM,EAAE;AACNe,cAAAA,IAAI,EAAE;AACJC,gBAAAA,IAAI,EAAE;AADF;AADA;AADF;AADD;AAXF;AArBX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA+CD,CAjED;;GAAM7B,Y;UACaD,W;;;KADbC,Y;AAmEN,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Doughnut } from 'react-chartjs-2';\nimport { useLocation } from 'react-router-dom';\n\nconst DouByCompany = () => {\n  const { data } = useLocation();\n\n  const [dict, setDict] = useState([]);\n  const getDict = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/by_company/${data[0]}/${data[1]}`);\n      const jsonData = await response.json();\n      setDict(jsonData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    getDict();\n  }, []);\n\n  return (\n    <div>\n      <Doughnut\n        data={{\n          labels: ['Average Salary', 'Average Bonus'],\n          datasets: [\n            {\n              label: 'AVERAGE',\n              data: [ dict.average_salary, dict.average_bonus],\n              backgroundColor: [\n                'rgba(255, 99, 132, 0.5)',\n                'rgba(54, 162, 235, 0.5)',\n              ],\n              borderColor: [\n                'rgba(255, 99, 132, 1)',\n                'rgba(54, 162, 235, 1)',\n              ],\n              borderWidth: 0.5,\n            },\n          ],\n        }}\n        height={400}\n        width={600}\n        options={{\n          maintainAspectRatio: false,\n          scales: {\n            yAxes: [\n              {\n                ticks: {\n                  beginAtZero: true,\n                }\n              }\n            ]\n          },\n          plugins: {\n            legend: {\n              labels: {\n                font: {\n                  size: 14\n                }\n              }\n            }\n          }\n        }}\n      />\n    </div>\n  )\n}\n\nexport default DouByCompany;\n"]},"metadata":{},"sourceType":"module"}