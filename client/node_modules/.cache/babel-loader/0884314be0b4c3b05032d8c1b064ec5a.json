{"ast":null,"code":"var _jsxFileName = \"/root/capstone_project/client/src/Components/BarByCompany.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BarByCompany = ({\n  dicCompany\n}) => {\n  let level_list = [];\n  const company = \"\";\n\n  if (dicCompany) {\n    const l = {\n      \"L0\": 0,\n      \"L1\": 0,\n      \"L2\": 0,\n      \"L3\": 0,\n      \"L4\": 0,\n      \"L5\": 0\n    };\n    const company = dicCompany.company_name;\n\n    for (const key in l) {\n      if (key in dicCompany.company_median_salary[dicCompany.company_name]) {\n        l[key] = dicCompany.company_median_salary[dicCompany.company_name][key];\n      }\n    }\n\n    for (const key2 in l) {\n      level_list.push(l[key2]);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      data: {\n        labels: ['L0', 'L1', 'L2', 'L3', 'L4', 'L5'],\n        datasets: [{\n          label: ': General Median',\n          data: level_list,\n          backgroundColor: ['rgba(75, 192, 192, 0.5)'],\n          borderColor: ['rgba(75, 192, 192, 1)'],\n          borderWidth: 0.5\n        }]\n      },\n      height: 400,\n      width: 600,\n      options: {\n        maintainAspectRatio: false,\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: true\n            }\n          }]\n        },\n        plugins: {\n          legend: {\n            labels: {\n              font: {\n                size: 14\n              }\n            }\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_c = BarByCompany;\nexport default BarByCompany;\n\nvar _c;\n\n$RefreshReg$(_c, \"BarByCompany\");","map":{"version":3,"sources":["/root/capstone_project/client/src/Components/BarByCompany.js"],"names":["React","useEffect","useState","Bar","BarByCompany","dicCompany","level_list","company","l","company_name","key","company_median_salary","key2","push","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","plugins","legend","font","size"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,GAAT,QAAoB,iBAApB;;;AAEA,MAAMC,YAAY,GAAG,CAAE;AAAEC,EAAAA;AAAF,CAAF,KAAsB;AAGzC,MAAIC,UAAU,GAAG,EAAjB;AACA,QAAMC,OAAO,GAAG,EAAhB;;AACA,MAAIF,UAAJ,EAAgB;AACd,UAAMG,CAAC,GAAG;AAAC,YAAK,CAAN;AAAS,YAAK,CAAd;AAAiB,YAAK,CAAtB;AAAyB,YAAK,CAA9B;AAAiC,YAAK,CAAtC;AAAyC,YAAK;AAA9C,KAAV;AACA,UAAMD,OAAO,GAAGF,UAAU,CAACI,YAA3B;;AACA,SAAK,MAAMC,GAAX,IAAkBF,CAAlB,EAAqB;AACnB,UAAIE,GAAG,IAAIL,UAAU,CAACM,qBAAX,CAAiCN,UAAU,CAACI,YAA5C,CAAX,EAAsE;AACpED,QAAAA,CAAC,CAACE,GAAD,CAAD,GAASL,UAAU,CAACM,qBAAX,CAAiCN,UAAU,CAACI,YAA5C,EAA0DC,GAA1D,CAAT;AACD;AACF;;AACD,SAAK,MAAME,IAAX,IAAmBJ,CAAnB,EAAsB;AACpBF,MAAAA,UAAU,CAACO,IAAX,CAAgBL,CAAC,CAACI,IAAD,CAAjB;AACD;AACF;;AAED,sBACE;AAAA,2BACE,QAAC,GAAD;AACE,MAAA,IAAI,EAAE;AACJE,QAAAA,MAAM,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,CADJ;AAEJC,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,KAAK,EAAE,kBADT;AAEEC,UAAAA,IAAI,EAAEX,UAFR;AAGEY,UAAAA,eAAe,EAAE,CACf,yBADe,CAHnB;AAMEC,UAAAA,WAAW,EAAE,CACX,uBADW,CANf;AASEC,UAAAA,WAAW,EAAE;AATf,SADQ;AAFN,OADR;AAiBE,MAAA,MAAM,EAAE,GAjBV;AAkBE,MAAA,KAAK,EAAE,GAlBT;AAmBE,MAAA,OAAO,EAAE;AACPC,QAAAA,mBAAmB,EAAE,KADd;AAEPC,QAAAA,MAAM,EAAE;AACNC,UAAAA,KAAK,EAAE,CACL;AACEC,YAAAA,KAAK,EAAE;AACLC,cAAAA,WAAW,EAAE;AADR;AADT,WADK;AADD,SAFD;AAWPC,QAAAA,OAAO,EAAE;AACPC,UAAAA,MAAM,EAAE;AACNb,YAAAA,MAAM,EAAE;AACNc,cAAAA,IAAI,EAAE;AACJC,gBAAAA,IAAI,EAAE;AADF;AADA;AADF;AADD;AAXF;AAnBX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA6CD,CA/DD;;KAAMzB,Y;AAiEN,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Bar } from 'react-chartjs-2';\n\nconst BarByCompany = ( { dicCompany } ) => {\n\n  \n  let level_list = [];\n  const company = \"\"\n  if (dicCompany) {    \n    const l = {\"L0\":0, \"L1\":0, \"L2\":0, \"L3\":0, \"L4\":0, \"L5\":0};\n    const company = dicCompany.company_name;\n    for (const key in l) {\n      if (key in dicCompany.company_median_salary[dicCompany.company_name]) {\n        l[key] = dicCompany.company_median_salary[dicCompany.company_name][key];\n      }\n    }    \n    for (const key2 in l) {\n      level_list.push(l[key2]);\n    }\n  }\n\n  return (\n    <div>\n      <Bar\n        data={{\n          labels: ['L0', 'L1', 'L2', 'L3', 'L4', 'L5'],\n          datasets: [\n            {\n              label: ': General Median',\n              data: level_list,\n              backgroundColor: [\n                'rgba(75, 192, 192, 0.5)'\n              ],\n              borderColor: [\n                'rgba(75, 192, 192, 1)'\n              ],\n              borderWidth: 0.5,\n            },\n          ],\n        }}\n        height={400}\n        width={600}\n        options={{\n          maintainAspectRatio: false,\n          scales: {\n            yAxes: [\n              {\n                ticks: {\n                  beginAtZero: true,\n                }\n              }\n            ]\n          },\n          plugins: {\n            legend: {\n              labels: {\n                font: {\n                  size: 14\n                }\n              }\n            }\n          }\n        }}\n      />\n    </div>\n  )\n}\n\nexport default BarByCompany;\n"]},"metadata":{},"sourceType":"module"}