{"ast":null,"code":"var _jsxFileName = \"/root/capstone_project/client/src/Components/ListLevels.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListLevels = ({\n  nameCompany\n}) => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetch(\"http://localhost:5000\").then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw response;\n    }).then(data => {\n      setData(data);\n    }).catch(error => {\n      console.error(\"Error fetching data: \", error);\n      setError(error);\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, []);\n  if (loading) return \"Loading...\";\n  if (error) return \"Error!\";\n  const companies = Object.keys(data);\n  const company = nameCompany;\n  const index = companies.indexOf(company);\n  console.log(index);\n  const ran = Math.floor(Math.random() * 1000);\n  const list_levels = [];\n\n  for (const key in data) {\n    const l = {\n      \"L0\": \"No data\",\n      \"L1\": \"No data\",\n      \"L2\": \"No data\",\n      \"L3\": \"No data\",\n      \"L4\": \"No data\",\n      \"L5\": \"No data\"\n    };\n\n    for (const key2 in l) {\n      if (key2 in data[key]) {\n        l[key2] = data[key][key2];\n      }\n    }\n\n    list_levels.push(l);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"btn-group-vertical btn-group-lg\",\n      role: \"group\",\n      children: Object.keys(list_levels[index]).map(key => /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        class: \"btn btn-info\",\n        style: {\n          background: '#E4D8DC',\n          width: 'flex'\n        },\n        children: list_levels[index][key]\n      }, ran, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ListLevels, \"RiL7vLwmC7ZWXKL/bXt2EIBjBYk=\");\n\n_c = ListLevels;\nexport default ListLevels;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListLevels\");","map":{"version":3,"sources":["/root/capstone_project/client/src/Components/ListLevels.js"],"names":["React","useEffect","useState","Fragment","ListLevels","nameCompany","data","setData","loading","setLoading","error","setError","fetch","then","response","ok","json","catch","console","finally","companies","Object","keys","company","index","indexOf","log","ran","Math","floor","random","list_levels","key","l","key2","push","map","background","width"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, Fragment } from \"react\";\n\nconst ListLevels = ({nameCompany}) => {\n\n    const [data, setData] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        fetch(\"http://localhost:5000\")\n            .then((response) => {\n                if (response.ok) {\n                    return response.json();\n                }\n                throw response;\n            })\n            .then(data => {\n                setData(data);\n            })\n            .catch((error) => {\n                console.error(\"Error fetching data: \", error);\n                setError(error);\n            })\n            .finally(() => {\n                setLoading(false);\n            });\n    }, []);\n    if (loading) return \"Loading...\";\n    if (error) return \"Error!\";\n\n    const companies = Object.keys(data);\n    const company = nameCompany\n    const index = companies.indexOf(company);\n    console.log(index);\n    const ran = Math.floor(Math.random() * 1000);\n\n    const list_levels = [];\n\n\n    for (const key in data) {\n        const l = { \"L0\": \"No data\", \"L1\": \"No data\", \"L2\": \"No data\", \"L3\": \"No data\", \"L4\": \"No data\", \"L5\": \"No data\" };\n        for (const key2 in l) {\n            if (key2 in data[key]) {\n                l[key2] = data[key][key2];\n            }\n        }\n        list_levels.push(l)\n    }\n\n    return (\n        <Fragment>\n            <div class=\"btn-group-vertical btn-group-lg\" role=\"group\">\n                {Object.keys(list_levels[index]).map(key => (\n\n                    <button type=\"button\" class=\"btn btn-info\" key={ran}\n                        style={{\n                            background: '#E4D8DC',\n                            width: 'flex'\n                        }}>\n                        {list_levels[index][key]}\n                    </button>\n                ))}\n            </div>\n        </Fragment>\n    );\n};\n\nexport default ListLevels;"]},"metadata":{},"sourceType":"module"}